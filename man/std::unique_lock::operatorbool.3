.TH std::unique_lock::operatorbool 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unique_lock::operatorbool \- std::unique_lock::operatorbool

.SH Synopsis
   explicit operator bool() const noexcept;  \fI(since C++11)\fP

   Checks whether *this owns a locked mutex or not. Effectively calls owns_lock().

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if *this has an associated mutex and has acquired ownership of it, false
   otherwise.

.SH See also

   owns_lock tests whether the lock owns (i.e., has locked) its associated mutex
             \fI(public member function)\fP 
