.TH std::ranges::adjacent_transform_view::iterator::operator* 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::adjacent_transform_view::iterator::operator* \- std::ranges::adjacent_transform_view::iterator::operator*

.SH Synopsis
   constexpr decltype(auto) operator*() const noexcept(/* see below */);  (since C++23)

   Returns the current element in the adjacent_transform_view.

   Let parent_ and inner_ be the data members of the iterator. Equivalent to:

 return apply([&](const auto&... iters) -> decltype(auto)
              {
                  return invoke(*parent_->fun_, *iters...);
              },
              inner_.current_);

.SH Parameters

   \fI(none)\fP

.SH Return value

   The current element.

.SH Exceptions

   Let Is be the pack 0, 1, ..., (N - 1).

   noexcept specification:  
   noexcept(std::invoke(*parent_->fun_, *std::get<Is>(inner_.current_)...))

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator[] accesses an element by index
   (C++23)    \fI(public member function)\fP

.SH Categories:
     * conditionally noexcept
     * Todo no example
