.TH std::basic_const_iterator::operator* 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_const_iterator::operator* \- std::basic_const_iterator::operator*

.SH Synopsis
   constexpr std::iter_const_reference_t<Iter> operator*() const;           \fB(1)\fP (since
                                                                                C++23)
   constexpr const auto* operator->() const

       requires std::is_lvalue_reference_v<std::iter_reference_t<Iterator>>
   &&                                                                       \fB(2)\fP (since
                                                                                C++23)
   std::same_as<std::remove_cvref_t<std::iter_reference_t<Iterator>>,

                        value_type>;

   Returns a reference or pointer to the const version of the current element.

   1) Returns static_cast<std::iter_const_reference_t<Iter>>(*base()).
   2) If Iter models contiguous_iterator, returns std::to_address(base()); otherwise,
   returns std::addressof(*base()).

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) Reference-to-const that refers to the current element. The result may be a
   prvalue (e.g. if *base() is a prvalue).
   2) Pointer-to-const that points to the current element.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   operator[] accesses an element by index
              \fI(public member function)\fP 

.SH Category:
     * Todo no example
