.TH std::chrono::hh_mm_ss::is_negative,std::chrono::hh_mm_ss::hours, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::hh_mm_ss::is_negative,std::chrono::hh_mm_ss::hours, \- std::chrono::hh_mm_ss::is_negative,std::chrono::hh_mm_ss::hours,

.SH Synopsis
                       std::chrono::hh_mm_ss<Duration>::subseconds

   constexpr bool is_negative() const noexcept;             \fB(1)\fP
   constexpr std::chrono::hours hours() const noexcept;     \fB(2)\fP
   constexpr std::chrono::minutes minutes() const noexcept; \fB(3)\fP
   constexpr std::chrono::seconds seconds() const noexcept; \fB(4)\fP
   constexpr precision subseconds() const noexcept;         \fB(5)\fP

   Obtains the components of the stored "broken down" time.

.SH Return value

   Let d be the represented duration:

   1) true if d is negative, false otherwise.
   2) std::chrono::duration_cast<std::chrono::hours>(abs(d))
   3) std::chrono::duration_cast<std::chrono::minutes>(abs(d) - hours())
   4) std::chrono::duration_cast<std::chrono::seconds>(abs(d) - hours() - minutes())
   5) abs(d) - hours() - minutes() - seconds() if
   std::chrono::treat_as_floating_point_v<precision::rep> is true; otherwise
   std::chrono::duration_cast<precision>(abs(d) - hours() - minutes() - seconds()).

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:
     * Todo no example
