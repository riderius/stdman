.TH std::experimental::observer_ptr::observer_ptr 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::observer_ptr::observer_ptr \- std::experimental::observer_ptr::observer_ptr

.SH Synopsis
   constexpr observer_ptr() noexcept;                  \fB(1)\fP (library fundamentals TS v2)
   constexpr observer_ptr( nullptr_t ) noexcept;
   constexpr explicit observer_ptr( element_type* p )  \fB(2)\fP (library fundamentals TS v2)
   noexcept;
   template< class W2 >
   constexpr observer_ptr( observer_ptr<W2> other )    \fB(3)\fP (library fundamentals TS v2)
   noexcept;
   observer_ptr( const observer_ptr& other ) =         \fB(4)\fP (library fundamentals TS v2)
   default;                                                (implicitly declared)
   observer_ptr( observer_ptr&& other ) = default;     \fB(5)\fP (library fundamentals TS v2)
                                                           (implicitly declared)

   1) Constructs an observer_ptr that has no corresponding watched object.
   2) Constructs an observer_ptr that watches p.
   3) Constructs an observer_ptr that watches other.get(). This overload participates
   in overload resolution only if W2* is convertible to element_type*.
   4,5) Implicitly declared copy and move constructors. Constructs an observer_ptr that
   watches other.get().

.SH Parameters

   p     - a pointer to an object to watch
   other - another observer_ptr to copy from
