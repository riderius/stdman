.TH std::binomial_distribution 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::binomial_distribution \- std::binomial_distribution

.SH Synopsis
   Defined in header <random>
   template< class IntType = int >  \fI(since C++11)\fP
   class binomial_distribution;

   Produces random non-negative integer values i, distributed according to discrete
   probability function:

   \\(P(i|t,p) = \\binom{t}{i} \\cdot p^i \\cdot (1-p)^{t-i}\\)P(i|t,p) =⎛
   ⎜
   ⎝t
   i⎞
   ⎟
   ⎠ · pi
   · (1 − p)t−i

   The value obtained is the number of successes in a sequence of t yes/no experiments,
   each of which succeeds with probability p.

   std::binomial_distribution satisfies RandomNumberDistribution.

.SH Template parameters

             The result type generated by the generator. The effect is undefined if
   IntType - this is not one of short, int, long, long long, unsigned short, unsigned
             int, unsigned long, or unsigned long long.

.SH Member types

   Member type         Definition
   result_type \fI(C++11)\fP IntType
   param_type \fI(C++11)\fP  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
   reset         resets the internal state of the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Characteristics
   p             returns the distribution parameters
   t             \fI(public member function)\fP 
   \fI(C++11)\fP
   param         gets or sets the distribution parameter object
   \fI(C++11)\fP       \fI(public member function)\fP 
   min           returns the minimum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 
   max           returns the maximum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 

.SH Non-member functions

   operator==
   operator!=                compares two distribution objects
   \fI(C++11)\fP                   \fI(function)\fP 
   \fI(C++11)\fP(removed in C++20)
   operator<<                performs stream input and output on pseudo-random number
   operator>>                distribution
   \fI(C++11)\fP                   \fI(function template)\fP 

.SH Example

   Plot of binomial distribution with probability of success of each trial exactly 0.5,
   illustrating the relationship with the pascal triangle (the probabilities that none,
   1, 2, 3, or all four of the 4 trials will be successful in this case are 1:4:6:4:1).

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <map>
 #include <random>
 #include <string>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
     // perform 4 trials, each succeeds 1 in 2 times
     std::binomial_distribution<> d(4, 0.5);
  
     std::map<int, int> hist;
     for (int n = 0; n != 10000; ++n)
         ++hist[d(gen)];
  
     for (auto const& [x, y] : hist)
         std::cout << x << ' ' << std::string(y / 100, '*') << '\\n';
 }

.SH Possible output:

 0 ******
 1 ************************
 2 *************************************
 3 *************************
 4 ******

.SH External links

   Weisstein, Eric W. "Binomial Distribution." From MathWorld — A Wolfram Web Resource.
