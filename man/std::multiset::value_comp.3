.TH std::multiset::value_comp 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multiset::value_comp \- std::multiset::value_comp

.SH Synopsis
   std::multiset::value_compare value_comp() const;

   Returns the function object that compares the values. It is the same as key_comp.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The value comparison function object.

.SH Complexity

   Constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <set>
 #include <utility>
  
 // Example module 97 key compare function
 struct ModCmp
 {
     bool operator()(int lhs, int rhs) const
     {
         return (lhs % 97) < (rhs % 97);
     }
 };
  
 int main()
 {
     std::multiset<int, ModCmp> cont{1, 2, 3, 4, 5};
  
     // Same behaviour as key_comp()
     auto comp_func = cont.value_comp();
  
     for (const int val{100}; const int key : cont)
     {
         const bool before = comp_func(key, val);
         const bool after = comp_func(val, key);
  
         std::cout << "Key (" << key << ") ";
         if (!before && !after)
             std::cout << "equivalent to key (" << val << ")\\n";
         else if (before)
             std::cout << "goes before key (" << val << ")\\n";
         else if (after)
             std::cout << "goes after key (" << val << ")\\n";
         else
             std::unreachable();
     }
 }

.SH Output:

 Key \fB(1)\fP goes before key (100)
 Key \fB(2)\fP goes before key (100)
 Key \fB(3)\fP equivalent to key (100)
 Key \fB(4)\fP goes after key (100)
 Key \fB(5)\fP goes after key (100)

.SH See also

   key_comp returns the function that compares keys
            \fI(public member function)\fP 
