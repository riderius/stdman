.TH std::numeric_limits::is_bounded 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::numeric_limits::is_bounded \- std::numeric_limits::is_bounded

.SH Synopsis
   static const bool is_bounded;      \fI(until C++11)\fP
   static constexpr bool is_bounded;  \fI(since C++11)\fP

   The value of std::numeric_limits<T>::is_bounded is true for all arithmetic types T
   that represent a finite set of values. While all fundamental types are bounded, this
   constant would be false in a specialization of std::numeric_limits for a
   library-provided arbitrary precision arithmetic type.

.SH Standard specializations

   T                                value of std::numeric_limits<T>::is_bounded
   /* non-specialized */            false
   bool                             true
   char                             true
   signed char                      true
   unsigned char                    true
   wchar_t                          true
   char8_t \fI(since C++20)\fP            true
   char16_t \fI(since C++11)\fP           true
   char32_t \fI(since C++11)\fP           true
   short                            true
   unsigned short                   true
   int                              true
   unsigned int                     true
   long                             true
   unsigned long                    true
   long long \fI(since C++11)\fP          true
   unsigned long long \fI(since C++11)\fP true
   float                            true
   double                           true
   long double                      true

.SH See also

   is_integer identifies integer types
   \fB[static]\fP   \fI(public static member constant)\fP 
   is_signed  identifies signed types
   \fB[static]\fP   \fI(public static member constant)\fP 
   is_exact   identifies exact types
   \fB[static]\fP   \fI(public static member constant)\fP 
