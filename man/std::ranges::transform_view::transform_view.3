.TH std::ranges::transform_view::transform_view 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::transform_view::transform_view \- std::ranges::transform_view::transform_view

.SH Synopsis
   transform_view() requires std::default_initializable<V> &&         \fB(1)\fP \fI(since C++20)\fP
                             std::default_initializable<F> = default;
   constexpr explicit transform_view( V base, F fun );                \fB(2)\fP \fI(since C++20)\fP

   Constructs a transform_view.

   1) Default constructor. Value-initializes the underlying view and the transformation
   function.
   2) Move constructs the underlying view from base and the transformation function
   from fun.

.SH Parameters

   base - view
   fun  - transformation function

.SH Example

   Demonstrates π approximation using serial expansion of arc tangent of 1:
   atan(1) = π/4 ~ 1 - 1/3 + 1/5 - 1/7 + 1/9 - 1/11 + ...

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <numbers>
 #include <numeric>
 #include <ranges>
  
 int main()
 {
     std::cout << std::setprecision(15) << std::fixed;
     auto atan1term = std::ranges::views::transform(
         [](int n) { return ((n % 2) ? -1 : 1) * 1.0 / (2 * n + 1); }
     );
     for (const int iterations : {1, 2, 3, 4, 5, 10, 100, 1000, 1'000'000})
     {
         auto seq = std::ranges::views::iota(0, iterations) | atan1term;
         const double accum = std::accumulate(seq.begin(), seq.end(), 0.0);
         std::cout << "π ~ " << 4 * accum << " (iterations: " << iterations << ")\\n";
     }
     std::cout << "π ~ " << std::numbers::pi << " (std::numbers::pi)\\n";
 }

.SH Possible output:

 π ~ 4.000000000000000 (iterations: 1)
 π ~ 2.666666666666667 (iterations: 2)
 π ~ 3.466666666666667 (iterations: 3)
 π ~ 2.895238095238096 (iterations: 4)
 π ~ 3.339682539682540 (iterations: 5)
 π ~ 3.041839618929403 (iterations: 10)
 π ~ 3.131592903558554 (iterations: 100)
 π ~ 3.140592653839794 (iterations: 1000)
 π ~ 3.141591653589774 (iterations: 1000000)
 π ~ 3.141592653589793 (std::numbers::pi)

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR     Applied to        Behavior as published              Correct behavior
   LWG 3714  C++20      the multi-parameter constructor was  made explicit
   (P2711R1)            not explicit
                        if F is not default_initializable,
   P2325R3   C++20      the default constructor              the transform_view is also
                        constructs a transform_view which    not default_initializable
                        does not contain an F
