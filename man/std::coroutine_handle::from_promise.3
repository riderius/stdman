.TH std::coroutine_handle::from_promise 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::coroutine_handle::from_promise \- std::coroutine_handle::from_promise

.SH Synopsis
   static coroutine_handle from_promise( Promise& p );  \fI(since C++20)\fP

   Creates a coroutine_handle from the promise object of a coroutine. The created
   coroutine_handle refers the coroutine, and promise() returns a reference to p.

   The behavior is undefined if p is not a reference to a promise object. This function
   is only provided for the primary template, i.e. specializations
   std::coroutine_handle<> and std::coroutine_handle<std::noop_coroutine_promise> do
   not have this function.

.SH Parameters

   p - promise object of a coroutine to refer

.SH Return value

   A coroutine_handle referring the given coroutine.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   constructor      constructs a coroutine_handle object
   (C++20)          \fI(public member function)\fP 
   from_address     imports a coroutine from a pointer
   \fB[static]\fP (C++20) \fI(public static member function)\fP 
   noop_coroutine   creates a coroutine handle that has no observable effects when
   (C++20)          resumed or destroyed
                    \fI(function)\fP 

.SH Category:
     * Todo no example
