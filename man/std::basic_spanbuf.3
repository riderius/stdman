.TH std::basic_spanbuf 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_spanbuf \- std::basic_spanbuf

.SH Synopsis
   Defined in header <spanstream>
   template<

       class CharT,
       class Traits = std::char_traits<CharT>        (since C++23)
   > class basic_spanbuf

       : public std::basic_streambuf<CharT, Traits>

   std::basic_spanbuf is a std::basic_streambuf whose associated character sequence is
   a memory-resident sequence of arbitrary characters, which can be initialized from or
   made available as an instance of std::span<CharT>.

   std::basic_spanbuf performs I/O on a fixed buffer, and therefore it does not attempt
   to obtain a new buffer when the underlying buffer is exhausted.

   Several typedefs for common character types are provided:

   Defined in header <spanstream>
   Type          Definition
   std::spanbuf  std::basic_spanbuf<char>
   std::wspanbuf std::basic_spanbuf<wchar_t>

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not
               CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

   Data members

   Member name   Definition
   mod (private) A std::ios_base::openmode recording the open mode.
                 (exposition-only member object*)
   buf (private) A std::span<CharT> referencing the underlying buffer.
                 (exposition-only member object*)

.SH Member functions

.SH Public member functions
   constructor       constructs a basic_spanbuf object
   (C++23)           \fI(public member function)\fP 
   destructor        destroys the basic_spanbuf object
   \fB[virtual]\fP (C++23) \fI(virtual public member function)\fP
   operator=         assigns a basic_spanbuf object
   (C++23)           \fI(public member function)\fP 
   swap              swaps two basic_spanbuf objects
   (C++23)           \fI(public member function)\fP 
   span              obtains or initializes an underlying buffer according to mode
   (C++23)           \fI(public member function)\fP 
.SH Protected member functions
   setbuf            attempts to replace the controlled character sequence with an
   \fB[virtual]\fP (C++23) array
                     \fI(virtual protected member function)\fP 
   seekoff           repositions the next pointer in the input sequence, output
   \fB[virtual]\fP (C++23) sequence, or both, using relative addressing
                     \fI(virtual protected member function)\fP 
   seekpos           repositions the next pointer in the input sequence, output
   \fB[virtual]\fP (C++23) sequence, or both using absolute addressing
                     \fI(virtual protected member function)\fP 

.SH Non-member functions

   std::swap(std::basic_spanbuf) specializes the std::swap algorithm
   (C++23)                       \fI(function template)\fP 

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not
               CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor         destructs the basic_streambuf object
   \fB[virtual]\fP          \fI\fI(virtual public member function\fP of\fP
                      std::basic_streambuf<CharT,Traits>) 
.SH Locales
                      invokes imbue()
   pubimbue           \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      obtains a copy of the associated locale
   getloc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Positioning
                      invokes setbuf()
   pubsetbuf          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekoff()
   pubseekoff         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekpos()
   pubseekpos         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes sync()
   pubsync            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Get area
                      obtains the number of characters immediately available in the get
   in_avail           area
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      advances the input sequence, then reads one character without
   snextc             advancing again
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
   sbumpc             reads one character from the input sequence and advances the
   stossc             sequence
   (removed in C++17) \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      reads one character from the input sequence without advancing the
   sgetc              sequence
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsgetn()
   sgetn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Put area
                      writes one character to the put area and advances the next
   sputc              pointer
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsputn()
   sputn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Putback
                      puts one character back in the input sequence
   sputbackc          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      moves the next pointer in the input sequence back by one
   sungetc            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP 
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP 
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP 
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekoff       or both, using relative addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekpos       or both using absolute addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Get area
                 obtains the number of characters available for input in the associated
   showmanyc     input sequence, if known
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 reads characters from the associated input sequence to the get area
   uflow         and advances the next pointer
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   eback         returns a pointer to the beginning, current character and the end of
   gptr          the get area
   egptr         \fI(protected member function)\fP 
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the input
   setg          sequence
                 \fI(protected member function)\fP 
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   pbase         returns a pointer to the beginning, current character and the end of
   pptr          the put area
   epptr         \fI(protected member function)\fP 
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the output
   setp          sequence
                 \fI(protected member function)\fP 
.SH Putback
                 puts a character back into the input sequence, possibly modifying the
   pbackfail     input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 

.SH Notes

   std::basic_spanbuf does not own the underlying buffer.

   It is the responsibility of programmers to ensure the underlying buffer is in its
   lifetime when used by a std::basic_spanbuf object. Additional synchronization may be
   needed if more than one thread operates the same underlying buffer through different
   std::basic_spanbuf objects.

    Feature-test macro   Value    Std              Feature
   __cpp_lib_spanstream 202106L (C++23) std::spanbuf, std::spanstream

.SH See also

   basic_stringbuf       implements raw string device
                         \fI(class template)\fP 
   strstreambuf          implements raw character array device
   (deprecated in C++98) \fI(class)\fP 
   (removed in C++26)
