.TH std::countr_one 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::countr_one \- std::countr_one

.SH Synopsis
   Defined in header <bit>
   template< class T >                        \fI(since C++20)\fP
   constexpr int countr_one( T x ) noexcept;

   Returns the number of consecutive 1 bits in the value of x, starting from the least
   significant bit ("right").

   This overload participates in overload resolution only if T is an unsigned integer
   type (that is, unsigned char, unsigned short, unsigned int, unsigned long, unsigned
   long long, or an extended unsigned integer type).

.SH Parameters

   x - value of unsigned integer type

.SH Return value

   The number of consecutive 1 bits in the value of x, starting from the least
   significant bit.

.SH Notes

   Feature-test macro  Value    Std      Feature
   __cpp_lib_bitops   201907L (C++20) Bit operations

.SH Example

   
// Run this code

 #include <bit>
 #include <bitset>
 #include <cstdint>
 #include <iostream>
  
 int main()
 {
     for (const std::uint8_t i : {0, 0b11111111, 0b11111110, 0b11100011})
         std::cout << "countr_one( " << std::bitset<8>(i) << " ) = "
                   << std::countr_one(i) << '\\n';
 }

.SH Output:

 countr_one( 00000000 ) = 0
 countr_one( 11111111 ) = 8
 countr_one( 11111110 ) = 0
 countr_one( 11100011 ) = 2

.SH See also

   countl_zero    counts the number of consecutive 0 bits, starting from the most
   (C++20)        significant bit
                  \fI(function template)\fP 
   countl_one     counts the number of consecutive 1 bits, starting from the most
   (C++20)        significant bit
                  \fI(function template)\fP 
   countr_zero    counts the number of consecutive 0 bits, starting from the least
   (C++20)        significant bit
                  \fI(function template)\fP 
   popcount       counts the number of 1 bits in an unsigned integer
   (C++20)        \fI(function template)\fP 
   has_single_bit checks if a number is an integral power of 2
   (C++20)        \fI(function template)\fP 
   count          returns the number of bits set to true
                  \fI(public member function of std::bitset<N>)\fP 
   all            checks if all, any or none of the bits are set to true
   any            \fI(public member function of std::bitset<N>)\fP 
   none
