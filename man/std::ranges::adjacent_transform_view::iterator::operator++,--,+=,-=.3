.TH std::ranges::adjacent_transform_view::iterator::operator++,--,+=,-= 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::adjacent_transform_view::iterator::operator++,--,+=,-= \- std::ranges::adjacent_transform_view::iterator::operator++,--,+=,-=

.SH Synopsis
   constexpr /*iterator*/& operator++();                   \fB(1)\fP (since C++23)
   constexpr /*iterator*/ operator++(int);                 \fB(2)\fP (since C++23)
   constexpr /*iterator*/& operator--()                    \fB(3)\fP (since C++23)
       requires ranges::bidirectional_range<Base>;
   constexpr /*iterator*/ operator--( int )                \fB(4)\fP (since C++23)
       requires ranges::bidirectional_range<Base>;
   constexpr /*iterator*/& operator+=( difference_type n ) \fB(5)\fP (since C++23)
       requires ranges::random_access_range<Base>;
   constexpr /*iterator*/& operator-=( difference_type n ) \fB(6)\fP (since C++23)
       requires ranges::random_access_range<Base>;

   Increments or decrements the iterator.

   Let inner_ be the underlying iterator and Base be the exposition-only member type.

   Equivalent to:

   1) ++inner_; return *this;
   2) auto tmp = *this; ++*this; return tmp;
   3) --inner_; return *this;
   4) auto tmp = *this; --*this; return tmp;
   5) inner_ += n; return *this;
   6) inner_ -= n; return *this;

.SH Parameters

   n - position relative to current location

.SH Return value

   1,3,5,6) *this
   2,4) a copy of *this that was made before the change

.SH Example

    This section is incomplete
    Reason: no example

.SH See also


.SH Category:
     * Todo no example
