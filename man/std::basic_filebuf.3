.TH std::basic_filebuf 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_filebuf \- std::basic_filebuf

.SH Synopsis
   Defined in header <fstream>
   template<

       class CharT,
       class Traits = std::char_traits<CharT>

   > class basic_filebuf : public std::basic_streambuf<CharT, Traits>

   std::basic_filebuf is a std::basic_streambuf whose associated character sequence is
   a file. Both the input sequence and the output sequence are associated with the same
   file, and a joint file position is maintained for both operations. The restrictions
   on reading and writing a sequence with std::basic_filebuf are the same as
   std::FILEs.

   The functions underflow() and overflow() / sync() perform the actual I/O between the
   file and the get and put areas of the buffer. When CharT is not char, most
   implementations store multibyte characters in the file and a std::codecvt facet is
   used to perform wide/multibyte character conversion.

   Several typedefs for common character types are provided:

   Defined in header <streambuf>
   Type          Definition
   std::filebuf  std::basic_filebuf<char>
   std::wfilebuf std::basic_filebuf<wchar_t>

.SH Member types

   Member type               Definition
   char_type                 CharT
   traits_type               Traits; the program is ill-formed if Traits::char_type is
                             not CharT.
   int_type                  Traits::int_type
   pos_type                  Traits::pos_type which is required to be
                             std::fpos<Traits::state_type>
   off_type                  Traits::off_type
   native_handle_type(C++26) implementation-defined type that is TriviallyCopyable and
                             semiregular

.SH Member functions

.SH Public member functions
   constructor   constructs a basic_filebuf object
                 \fI(public member function)\fP 
   operator=     assigns a basic_filebuf object
   \fI(C++11)\fP       \fI(public member function)\fP 
   swap          swaps two basic_filebuf objects
   \fI(C++11)\fP       \fI(public member function)\fP 
   native_handle returns the underlying implementation-defined handle
   (C++26)       \fI(public member function)\fP 
   destructor    destructs a basic_filebuf object and closes the file if it is open
   \fB[virtual]\fP     \fI(virtual public member function)\fP 
   is_open       checks if the associated file is open
                 \fI(public member function)\fP 
   open          opens a file and configures it as the associated character sequence
                 \fI(public member function)\fP 
   close         flushes the put area buffer and closes the associated file
                 \fI(public member function)\fP 
.SH Protected member functions
   showmanyc     optionally provides the number of characters available for input from
   \fB[virtual]\fP     the file
                 \fI(virtual protected member function)\fP 
   underflow     reads from the associated file
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   uflow         reads from the associated file and advances the next pointer in the
   \fB[virtual]\fP     get area
                 \fI(virtual protected member function)\fP 
   pbackfail     backs out the input sequence to unget a character, not affecting the
   \fB[virtual]\fP     associated file
                 \fI(virtual protected member function)\fP 
   overflow      writes characters to the associated file from the put area
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   setbuf        provides user-supplied buffer or turns this filebuf unbuffered
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   seekoff       repositions the file position, using relative addressing
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   seekpos       repositions the file position, using absolute addressing
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   sync          writes characters to the associated file from the put area
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 

.SH Non-member functions

   std::swap(std::basic_filebuf) specializes the std::swap algorithm
   \fI(C++11)\fP                       \fI(function template)\fP 

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not
               CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor         destructs the basic_streambuf object
   \fB[virtual]\fP          \fI\fI(virtual public member function\fP of\fP
                      std::basic_streambuf<CharT,Traits>) 
.SH Locales
                      invokes imbue()
   pubimbue           \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      obtains a copy of the associated locale
   getloc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Positioning
                      invokes setbuf()
   pubsetbuf          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekoff()
   pubseekoff         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekpos()
   pubseekpos         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes sync()
   pubsync            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Get area
                      obtains the number of characters immediately available in the get
   in_avail           area
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      advances the input sequence, then reads one character without
   snextc             advancing again
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
   sbumpc             reads one character from the input sequence and advances the
   stossc             sequence
   (removed in C++17) \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      reads one character from the input sequence without advancing the
   sgetc              sequence
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsgetn()
   sgetn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Put area
                      writes one character to the put area and advances the next
   sputc              pointer
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsputn()
   sputn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Putback
                      puts one character back in the input sequence
   sputbackc          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      moves the next pointer in the input sequence back by one
   sungetc            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP 
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP 
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP 
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekoff       or both, using relative addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekpos       or both using absolute addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Get area
                 obtains the number of characters available for input in the associated
   showmanyc     input sequence, if known
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 reads characters from the associated input sequence to the get area
   uflow         and advances the next pointer
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   eback         returns a pointer to the beginning, current character and the end of
   gptr          the get area
   egptr         \fI(protected member function)\fP 
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the input
   setg          sequence
                 \fI(protected member function)\fP 
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   pbase         returns a pointer to the beginning, current character and the end of
   pptr          the put area
   epptr         \fI(protected member function)\fP 
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the output
   setp          sequence
                 \fI(protected member function)\fP 
.SH Putback
                 puts a character back into the input sequence, possibly modifying the
   pbackfail     input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 

.SH Notes

         Feature-test macro         Value    Std          Feature
   __cpp_lib_fstream_native_handle 202306L (C++26) native handles support

.SH See also

        object type, capable of holding all information needed to control a C I/O
   FILE stream
        \fI(typedef)\fP 
