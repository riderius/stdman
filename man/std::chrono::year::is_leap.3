.TH std::chrono::year::is_leap 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::year::is_leap \- std::chrono::year::is_leap

.SH Synopsis
   constexpr bool is_leap() const noexcept;  \fI(since C++20)\fP

   Determines if *this represents a leap year in the proleptic Gregorian calendar.

   *this represents a leap year if the stored year value

     * is divisible by 4 and not divisible by 100; or
     * is divisible by 400.

.SH Return value

   true if *this represents a leap year, otherwise false.

.SH Example

   
// Run this code

 #include <chrono>
 #include <iostream>
  
 int main()
 {
     using namespace std::chrono_literals;
     for (const std::chrono::year y : {2020y, 2021y, 2000y, 3000y})
     {
         if (const int iy{static_cast<int>(y)}; y.is_leap())
             std::cout << iy << " is a leap year because it is divisible by "
                       << (iy % 400 == 0 ? "400\\n" : "4 and not divisible by 100\\n");
         else
             std::cout << iy << " is not a leap year\\n";
     }
 }

.SH Output:

 2020 is a leap year because it is divisible by 4 and not divisible by 100
 2021 is not a leap year
 2000 is a leap year because it is divisible by 400
 3000 is not a leap year
