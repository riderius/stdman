.TH std::mdspan::is_unique, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::mdspan::is_unique, \- std::mdspan::is_unique,

.SH Synopsis
             std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_strided,
          std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_unique,
        std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_exhaustive,
          std::mdspan<T,Extents,LayoutPolicy,AccessorPolicy>::is_always_strided

   Defined in header <mdspan>
   constexpr bool is_unique() const;             \fB(1)\fP (since C++23)
   constexpr bool is_exhaustive() const;         \fB(2)\fP (since C++23)
   constexpr bool is_strided() const;            \fB(3)\fP (since C++23)
   static member functions
   static constexpr bool is_always_unique();     \fB(4)\fP (since C++23)
   static constexpr bool is_always_exhaustive(); \fB(5)\fP (since C++23)
   static constexpr bool is_always_strided();    \fB(6)\fP (since C++23)

   Check if (1-3) the layout mapping map_ or (4-6) its type mapping_type satisfies some
   traits.

   1-3) Let func be \fB(1)\fP is_unique, \fB(2)\fP is_exhaustive, or \fB(3)\fP is_strided, then it's
   equivalent to return map_.func();.
   4-6) Let func be \fB(4)\fP is_always_unique, \fB(5)\fP is_always_exhaustive, or \fB(6)\fP
   is_always_strided, then it's equivalent to return mapping_type::func();.

    This section is incomplete
    Reason: add hyperlink to layout.reqmts(yet has not been created).

.SH Parameters

   \fI(none)\fP

.SH Return value

   See above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

    This section is incomplete

.SH Categories:
     * Todo with reason
     * Todo no example
     * Todo without reason
