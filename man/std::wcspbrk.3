.TH std::wcspbrk 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::wcspbrk \- std::wcspbrk

.SH Synopsis
   Defined in header <cwchar>
   const wchar_t* wcspbrk( const wchar_t* dest, const wchar_t* src );
       wchar_t* wcspbrk(       wchar_t* dest, const wchar_t* src );

   Finds the first character in wide string pointed to by dest, that is also in wide
   string pointed to by src.

.SH Parameters

   dest - pointer to the null-terminated wide string to be analyzed
   src  - pointer to the null-terminated wide string that contains the characters to
          search for

.SH Return value

   Pointer to the first character in dest, that is also in src, or a null pointer if no
   such character exists.

.SH Notes

   The name stands for "wide character string pointer break", because it returns a
   pointer to the first of the separator ("break") characters.

.SH Example

   
// Run this code

 #include <cwchar>
 #include <iomanip>
 #include <iostream>
  
 int main()
 {
     const wchar_t* str = L"Hello world, friend of mine!";
     const wchar_t* sep = L" ,!";
  
     unsigned int cnt = 0;
     do
     {
         str = std::wcspbrk(str, sep); // find separator
         std::wcout << std::quoted(str) << L'\\n';
         if (str)
             str += std::wcsspn(str, sep); // skip separator
         ++cnt; // increment word count
     } while (str && *str);
  
     std::wcout << L"There are " << cnt << L" words\\n";
 }

.SH Output:

 " world, friend of mine!"
 ", friend of mine!"
 " of mine!"
 " mine!"
 "!"
 There are 5 words

.SH See also

           returns the length of the maximum initial segment that consists
   wcscspn of only the wide not found in another wide string
           \fI(function)\fP 
   wcschr  finds the first occurrence of a wide character in a wide string
           \fI(function)\fP 
   strpbrk finds the first location of any character from a set of separators
           \fI(function)\fP 
   C documentation for
   wcspbrk
