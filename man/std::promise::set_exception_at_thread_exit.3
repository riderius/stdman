.TH std::promise::set_exception_at_thread_exit 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::promise::set_exception_at_thread_exit \- std::promise::set_exception_at_thread_exit

.SH Synopsis
   void set_exception_at_thread_exit( std::exception_ptr p );  \fI(since C++11)\fP

   Stores the exception pointer p into the shared state without making the state ready
   immediately. The state is made ready when the current thread exits, after all
   variables with thread-local storage duration have been destroyed.

   The operation behaves as though set_value, set_exception, set_value_at_thread_exit,
   and set_exception_at_thread_exit acquire a single mutex associated with the promise
   object while updating the promise object.

   An exception is thrown if there is no shared state or the shared state already
   stores a value or exception.

   Calls to this function do not introduce data races with calls to get_future
   (therefore they need not synchronize with each other).

.SH Parameters

   p - exception pointer to store. The behavior is undefined if p is nullptr

.SH Return value

   \fI(none)\fP

.SH Exceptions

   std::future_error on the following conditions:

     * *this has no shared state. The error code is set to no_state.
     * The shared state already stores a value or exception. The error code is set to
       promise_already_satisfied.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   set_exception sets the result to indicate an exception
                 \fI(public member function)\fP 

.SH Category:
     * Todo no example
