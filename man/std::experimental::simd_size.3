.TH std::experimental::simd_size 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::simd_size \- std::experimental::simd_size

.SH Synopsis
   Defined in header <experimental/simd>
   template< class T, class Abi = simd_abi::compatible<T> >  (parallelism TS v2)
   struct simd_size;

   If T is a vectorizable type and is_abi_tag_v<Abi> is true, provides the member
   constant value equal to the width (number of elements) of simd<T, Abi>, irrespective
   of whether simd<T, Abi> is supported or not. For any other types T and Abi, there is
   no member value.

   If the program adds specializations for std::simd_size
   or std::simd_size_v
   \fI(since C++17)\fP, the behavior is undefined.

.SH Member constants

   value    the width of simd<T, Abi>
   \fB[static]\fP \fI(public static member constant)\fP

.SH Member functions

   operator std::size_t converts the object to std::size_t, returns value
                        \fI(public member function)\fP
   operator()           returns value
   \fI(C++14)\fP              \fI(public member function)\fP

.SH Member types

   Type       Definition
   value_type std::size_t
   type       std::integral_constant<std::size_t, value>

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   size                     returns the width / number of elements
   \fB[static]\fP (parallelism TS \fI\fI(public static member\fP function of\fP
   v2)                      std::experimental::simd<T,Abi>) 
   size                     returns the width / number of elements
   \fB[static]\fP (parallelism TS \fI\fI(public static member\fP function of\fP
   v2)                      std::experimental::simd_mask<T,Abi>) 

.SH Category:
     * Todo no example
