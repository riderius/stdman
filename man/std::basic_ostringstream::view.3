.TH std::basic_ostringstream::view 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_ostringstream::view \- std::basic_ostringstream::view

.SH Synopsis
   std::basic_string_view<CharT, Traits> view() const noexcept;  \fI(since C++20)\fP

   Obtains a std::basic_string_view over the underlying string object. Equivalent to
   return rdbuf()->view();.

.SH Parameters

   \fI(none)\fP

.SH Return value

   A std::basic_string_view over the underlying string object.

.SH Example

   
// Run this code

 #include <iostream>
 #include <sstream>
  
 int main()
 {
     // input/output stream
     std::stringstream buf1;
     buf1 << 69;
     int n = 0;
     buf1 >> n;
     std::cout << "1) buf1 = [" << buf1.view() << "], n = " << n << '\\n';
  
     // output stream in append mode
     std::ostringstream buf2("test", std::ios_base::ate);
     buf2 << '1';
     std::cout << "2) buf2 = [" << buf2.view() << "]\\n";
  
     // input stream
     std::istringstream inbuf("-42");
     inbuf >> n;
     std::cout << "3) inbuf = [" << inbuf.view() << "], n = " << n << '\\n';
 }

.SH Output:

 1) buf1 = [69], n = 69
 2) buf2 = [test1]
 3) inbuf = [-42], n = -42

.SH See also

   view    obtains a view over the underlying character sequence
   (C++20) \fI(public member function of std::basic_stringbuf<CharT,Traits,Allocator>)\fP
           
