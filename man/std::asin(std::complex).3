.TH std::asin(std::complex) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::asin(std::complex) \- std::asin(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< class T >                                \fI(since C++11)\fP
   std::complex<T> asin( const std::complex<T>& z );

   Computes complex arc sine of a complex value z. Branch cut exists outside the
   interval [−1, +1] along the real axis.

.SH Parameters

   z - complex value

.SH Return value

   If no errors occur, complex arc sine of z is returned, in the range of a strip
   unbounded along the imaginary axis and in the interval [−π/2, +π/2] along the real
   axis.

   Errors and special cases are handled as if the operation is implemented by -i *
   std::asinh(i * z), where i is the imaginary unit.

.SH Notes

   Inverse sine (or arc sine) is a multivalued function and requires a branch cut on
   the complex plane. The branch cut is conventionally placed at the line segments
   (-∞,-1) and (1,∞) of the real axis.

   The mathematical definition of the principal value of arc sine is \\(\\small \\arcsin z
   = -{\\rm i}\\ln({\\rm i}z+\\sqrt{1-z^2})\\)arcsin z = -iln(iz +
   √
   1-z2
   ).

   For any z, \\(\\small{ \\arcsin(z) = \\arccos(-z) - \\frac{\\pi}{2} }\\)asin(z) = acos(-z)
   -

   π
   2

   .

.SH Example

   
// Run this code

 #include <cmath>
 #include <complex>
 #include <iostream>
  
 int main()
 {
     std::cout << std::fixed;
     std::complex<double> z1(-2.0, 0.0);
     std::cout << "asin" << z1 << " = " << std::asin(z1) << '\\n';
  
     std::complex<double> z2(-2.0, -0.0);
     std::cout << "asin" << z2 << " (the other side of the cut) = "
               << std::asin(z2) << '\\n';
  
     // for any z, asin(z) = acos(−z) − pi / 2
     const double pi = std::acos(-1);
     std::complex<double> z3 = std::acos(z2) - pi / 2;
     std::cout << "sin(acos" << z2 << " - pi / 2) = " << std::sin(z3) << '\\n';
 }

.SH Output:

 asin(-2.000000,0.000000) = (-1.570796,1.316958)
 asin(-2.000000,-0.000000) (the other side of the cut) = (-1.570796,-1.316958)
 sin(acos(-2.000000,-0.000000) - pi / 2) = (2.000000,0.000000)

.SH See also

   acos(std::complex)  computes arc cosine of a complex number
   \fI(C++11)\fP             (\\({\\small\\arccos{z}}\\)arccos(z))
                       \fI(function template)\fP 
   atan(std::complex)  computes arc tangent of a complex number
   \fI(C++11)\fP             (\\({\\small\\arctan{z}}\\)arctan(z))
                       \fI(function template)\fP 
   sin(std::complex)   computes sine of a complex number (\\({\\small\\sin{z}}\\)sin(z))
                       \fI(function template)\fP 
   asin
   asinf               computes arc sine (\\({\\small\\arcsin{x}}\\)arcsin(x))
   asinl               \fI(function)\fP 
   \fI(C++11)\fP
   \fI(C++11)\fP
   asin(std::valarray) applies the function std::asin to each element of valarray
                       \fI(function template)\fP 
   C documentation for
   casin
