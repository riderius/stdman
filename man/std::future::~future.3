.TH std::future::~future 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::future::~future \- std::future::~future

.SH Synopsis
   ~future();  \fI(since C++11)\fP

   Releases any shared state. This means

     * if the current object holds the last reference to its shared state, the shared
       state is destroyed;
     * the current object gives up its reference to its shared state;

     * these actions will not block for the shared state to become ready,
       except that they may block if all of the following are true:
    1. the shared state was created by a call to std::async,              \fI(since C++14)\fP
    2. the shared state is not yet ready, and
    3. the current object was the last reference to the shared state.

   In practice, these actions will block only if the taskâ€™s launch policy is
   std::launch::async (see "Effective Modern C++" Item 36), either because that was
   chosen by the runtime system or because it was specified in the call to std::async.
