.TH std::get(std::complex) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::get(std::complex) \- std::get(std::complex)

.SH Synopsis
   Defined in header <complex>
   template< std::size_t I >                                    \fB(1)\fP (since C++26)
   friend constexpr T& get( std::complex<T>& x );
   template< std::size_t I >                                    \fB(2)\fP (since C++26)
   friend constexpr const T& get( const std::complex<T>& x );
   template< std::size_t I >                                    \fB(3)\fP (since C++26)
   friend constexpr T&& get( std::complex<T>&& x );
   template< std::size_t I >                                    \fB(4)\fP (since C++26)
   friend constexpr const T&& get( const std::complex<T>&& x );

   Returns the reference to real or imaginary part from a complex when I == 0 or I ==
   1, respectively. It is mainly provided for structured binding support.

.SH Parameters

   x - a complex

.SH Return value

   1-4) A reference to the real or imaginary part from the stored one when I == 0 or I
   == 1, respectively.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   Structured binding \fI(C++17)\fP binds the specified names to sub-objects or tuple
                              elements of the initializer
   get(std::tuple)            tuple accesses specified element
   \fI(C++11)\fP                    \fI(function template)\fP 
   get(std::pair)             accesses an element of a pair
   \fI(C++11)\fP                    \fI(function template)\fP 
   get(std::array)            accesses an element of an array
   \fI(C++11)\fP                    \fI(function template)\fP 

.SH Category:
     * Todo no example
