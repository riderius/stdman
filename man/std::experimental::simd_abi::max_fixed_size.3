.TH std::experimental::simd_abi::max_fixed_size 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::simd_abi::max_fixed_size \- std::experimental::simd_abi::max_fixed_size

.SH Synopsis
   Defined in header <experimental/simd>
   template< class T >
   inline constexpr int max_fixed_size =                            (parallelism TS v2)
   /*implementation-defined*/;

   The value of max_fixed_size<T> declares that an instance of simd<T, fixed_size<N>>
   with N <= max_fixed_size<T> is supported by the implementation. The value of
   max_fixed_size<T> is at least 32.

.SH Notes

   It is unspecified whether an implementation supports simd<T, fixed_size<N>> with N >
   max_fixed_size<T>. The value of max_fixed_size<T> may depend on compiler flags and
   may change between different compiler versions.

.SH Example

   
// Run this code

 #include <cstdint>
 #include <experimental/simd>
 #include <iostream>
 namespace stq = std::experimental;
  
 int main()
 {
     std::cout << stq::simd_abi::max_fixed_size<std::uint8_t> << ' ';
     std::cout << stq::simd_abi::max_fixed_size<std::uint64_t> << ' ';
     std::cout << stq::simd_abi::max_fixed_size<float> << ' ';
     std::cout << stq::simd_abi::max_fixed_size<long double> << '\\n';
 }

.SH Possible output:

 32 32 32 32

.SH See also

   fixed_size          tag type for storing specified number of elements
   (parallelism TS v2) (alias template)
