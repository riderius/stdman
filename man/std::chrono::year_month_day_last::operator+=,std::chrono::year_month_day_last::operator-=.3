.TH std::chrono::year_month_day_last::operator+=,std::chrono::year_month_day_last::operator-= 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::year_month_day_last::operator+=,std::chrono::year_month_day_last::operator-= \- std::chrono::year_month_day_last::operator+=,std::chrono::year_month_day_last::operator-=

.SH Synopsis
   constexpr std::chrono::year_month_day_last&                     \fB(1)\fP \fI(since C++20)\fP
       operator+=( const std::chrono::years& dy ) const noexcept;
   constexpr std::chrono::year_month_day_last&                     \fB(2)\fP \fI(since C++20)\fP
       operator+=( const std::chrono::months& dm ) const noexcept;
   constexpr std::chrono::year_month_day_last&                     \fB(3)\fP \fI(since C++20)\fP
       operator-=( const std::chrono::years& dy ) const noexcept;
   constexpr std::chrono::year_month_day_last&                     \fB(4)\fP \fI(since C++20)\fP
       operator-=( const std::chrono::months& dm ) const noexcept;

   Modifies the time point *this represents by the duration dy or dm.

   1) Equivalent to *this = *this + dy;.
   2) Equivalent to *this = *this + dm;.
   3) Equivalent to *this = *this - dy;.
   4) Equivalent to *this = *this - dm;.

   For durations that are convertible to both std::chrono::years and
   std::chrono::months, the years overloads (1,3) are preferred if the call would
   otherwise be ambiguous.

.SH Example

   
// Run this code

 #include <cassert>
 #include <chrono>
  
 int main()
 {
     auto ymdl{11/std::chrono::last/2020};
  
     ymdl += std::chrono::years(15);
     assert(ymdl.day() == std::chrono::day(30));
     assert(ymdl.month() == std::chrono::November);
     assert(ymdl.year() == std::chrono::year(2035));
  
     ymdl -= std::chrono::months(6);
     assert(ymdl.day() == std::chrono::day(31));
     assert(ymdl.month() == std::chrono::May);
     assert(ymdl.year() == std::chrono::year(2035));
 }

.SH See also

   operator+ adds or subtracts a year_month_day_last and some number of years or months
   operator- \fI(function)\fP 
   (C++20)
