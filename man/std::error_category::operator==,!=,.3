.TH std::error_category::operator==,!=, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::error_category::operator==,!=, \- std::error_category::operator==,!=,

.SH Synopsis
   bool operator==( const error_category& rhs ) const noexcept;       \fB(1)\fP \fI(since C++11)\fP
   bool operator!=( const error_category& rhs ) const noexcept;       \fB(2)\fP \fI(since C++11)\fP
                                                                          \fI(until C++20)\fP
   bool operator<( const error_category& rhs ) const noexcept;        \fB(3)\fP \fI(since C++11)\fP
                                                                          \fI(until C++20)\fP
   std::strong_ordering operator<=>( const error_category& rhs )      \fB(4)\fP \fI(since C++20)\fP
   const noexcept;

   Compares to another error category.

   1) Checks whether *this and rhs refer to the same object.
   2) Checks whether *this and rhs do not refer to the same object.
   3) Orders *this and rhs by the order of this and &rhs. Equivalent to std::less<const
   error_category*>()(this, &rhs).
   4) Orders *this and rhs by the order of this and &rhs. Equivalent to
   std::compare_three_way()(this, &rhs).

   The <, <=, >, >=, and != operators are synthesized from operator<=>    \fI(since C++20)\fP
   and operator== respectively.

.SH Parameters

   rhs - specifies the error_category to compare

.SH Return value

   1) true if *this and rhs refer to the same object, false otherwise.
   2) true if *this and rhs do not refer to the same object, false otherwise.
   3) true if *this is less than rhs as defined by the order of this and &rhs.
   4) std::strong_order::less if *this is less than rhs as defined by the order of this
   and &rhs, otherwise std::strong_order::greater if rhs is less than *this in the
   order, otherwise std::strong_order::equal.
