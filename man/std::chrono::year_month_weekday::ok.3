.TH std::chrono::year_month_weekday::ok 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::year_month_weekday::ok \- std::chrono::year_month_weekday::ok

.SH Synopsis
   constexpr bool ok() const noexcept;  \fI(since C++20)\fP

   Checks if this year_month_weekday object represents a valid date.

.SH Return value

   true if this year_month_weekday object represents a valid date, that is, year().ok()
   && month().ok() && weekday_indexed().ok() is true and there are at least index()
   weekday()s in the specified year and month. Otherwise false.

.SH Example

   
// Run this code

 #include <cassert>
 #include <chrono>
  
 int main()
 {
     auto ymwdi{std::chrono::Wednesday[1]/1/2021};
     assert(ymwdi.ok());
     ymwdi = std::chrono::year(2021)/std::chrono::month(1)/std::chrono::Wednesday[42];
     assert(!ymwdi.ok());
 }
