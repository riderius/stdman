.TH std::reverse_iterator::reverse_iterator 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::reverse_iterator::reverse_iterator \- std::reverse_iterator::reverse_iterator

.SH Synopsis
   reverse_iterator();                              \fI(until C++17)\fP
   constexpr reverse_iterator();                    \fI(since C++17)\fP
   explicit reverse_iterator( iterator_type                       \fI(until C++17)\fP
   x );
   constexpr explicit reverse_iterator(                           \fI(since C++17)\fP
   iterator_type x );                       \fB(1)\fP
   template< class U >                          \fB(2)\fP                             (until
   reverse_iterator( const                                                      C++17)
   reverse_iterator<U>& other );                    \fB(3)\fP
   template< class U >                                                          (since
   constexpr reverse_iterator( const                                            C++17)
   reverse_iterator<U>& other );

   Constructs a new iterator adaptor.

   1) Default constructor. The underlying iterator is value-initialized. Operations on
   the resulting iterator have defined behavior if and only if the corresponding
   operations on a value-initialized Iter also have defined behavior.
   2) The underlying iterator is initialized with x.
   3) The underlying iterator is initialized with that of other.
   This overload participates in overload resolution only if U is not the same type as
   Iter and std::convertible_to<const U&, Iter> is modeled
   \fI(since C++20)\fP.

.SH Parameters

   x     - iterator to adapt
   other - iterator adaptor to copy

.SH Example

    This section is incomplete
    Reason: no example

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to          Behavior as published              Correct behavior
   LWG 235  C++98      the effect of the default constructor    specified
                       was not specified
   LWG 1012 C++98      the underlying iterator was              it is value-initialized
                       default-initialized
   LWG 3435 C++20      the converting constructor from another  constrained
                       reverse_iterator was not constrained

.SH See also

   operator=             assigns another iterator adaptor
                         \fI(public member function)\fP 
   make_reverse_iterator creates a std::reverse_iterator of type inferred from the
   \fI(C++14)\fP               argument
                         \fI(function template)\fP 

.SH Category:
     * Todo no example
