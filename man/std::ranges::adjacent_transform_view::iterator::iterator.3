.TH std::ranges::adjacent_transform_view::iterator::iterator 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::adjacent_transform_view::iterator::iterator \- std::ranges::adjacent_transform_view::iterator::iterator

.SH Synopsis
   /*iterator*/() = default;                                     \fB(1)\fP (since C++23)
   constexpr /*iterator*/( /*iterator*/<!Const> i )

       requires Const &&                                         \fB(2)\fP (since C++23)

           std::convertible_to</*inner-iterator*/<false>,
   /*inner-iterator*/<Const>>;
   private:
   constexpr /*iterator*/( Parent& parent,                       \fB(3)\fP (exposition only*)
   /*inner-iterator*/<Const> inner );

   Construct an iterator.

   1) Default constructor. Value-initializes the underlying pointer parent_ with
   nullptr, and default-initializes the underlying iterator inner_.
   2) Conversion from /*iterator*/<false> to /*iterator*/<true>. Initializes the
   underlying pointer parent_ with i.parent_, and move constructs the underlying
   iterator inner_ with std::move(i.inner_).
   3) This iterator also has a private constructor which is used by
   ranges::adjacent_transform_view::begin and ranges::adjacent_transform_view::end.
   This constructor is not accessible to users. Initializes parent_ with
   std::addressof(parent), and move constructs inner_ with std::move(inner).

.SH Parameters

   i      - an /*iterator*/<false>
   parent - an owning object of type adjacent_transform_view
   inner  - an iterator of type adjacent_transform_view::inner_iterator

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:
     * Todo no example
