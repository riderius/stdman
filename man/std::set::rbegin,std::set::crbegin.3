.TH std::set::rbegin,std::set::crbegin 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::set::rbegin,std::set::crbegin \- std::set::rbegin,std::set::crbegin

.SH Synopsis
   reverse_iterator rbegin();                       \fB(1)\fP (noexcept since C++11)
   const_reverse_iterator rbegin() const;           \fB(2)\fP (noexcept since C++11)
   const_reverse_iterator crbegin() const noexcept; \fB(3)\fP \fI(since C++11)\fP

   Returns a reverse iterator to the first element of the reversed set. It corresponds
   to the last element of the non-reversed set. If the set is empty, the returned
   iterator is equal to rend().

   range-rbegin-rend.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Reverse iterator to the first element.

.SH Complexity

   Constant.

.SH Notes

   Because both iterator and const_iterator are constant iterators (and may in fact be
   the same type), it is not possible to mutate the elements of the container through
   an iterator returned by any of these member functions.

   The underlying iterator of the returned reverse iterator is the end iterator. Hence
   the returned iterator is invalidated if and when the end iterator is invalidated.

   libc++ backports crbegin() to C++98 mode.

.SH Example

   
// Run this code

 #include <iostream>
 #include <set>
  
 int main()
 {
     std::set<unsigned> rep{1, 2, 3, 4, 1, 2, 3, 4};
  
     for (auto it = rep.crbegin(); it != rep.crend(); ++it)
     {
         for (auto n = *it; n > 0; --n)
             std::cout << "⏼" << ' ';
         std::cout << '\\n';
     }
 }

.SH Output:

 ⏼ ⏼ ⏼ ⏼
 ⏼ ⏼ ⏼
 ⏼ ⏼
 ⏼

.SH See also

   rend    returns a reverse iterator to the end
   crend   \fI(public member function)\fP 
   \fI(C++11)\fP
   rbegin  returns a reverse iterator to the beginning of a container or array
   crbegin \fI(function template)\fP 
   \fI(C++14)\fP
