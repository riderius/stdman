.TH std::multimap::upper_bound 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multimap::upper_bound \- std::multimap::upper_bound

.SH Synopsis
   iterator upper_bound( const Key& key );             \fB(1)\fP
   const_iterator upper_bound( const Key& key ) const; \fB(2)\fP
   template< class K >                                 \fB(3)\fP \fI(since C++14)\fP
   iterator upper_bound( const K& x );
   template< class K >                                 \fB(4)\fP \fI(since C++14)\fP
   const_iterator upper_bound( const K& x ) const;

   1,2) Returns an iterator pointing to the first element that is greater than key.
   3,4) Returns an iterator pointing to the first element that compares greater to the
   value x. This overload participates in overload resolution only if the qualified-id
   Compare::is_transparent is valid and denotes a type. It allows calling this function
   without constructing an instance of Key.

.SH Parameters

   key - key value to compare the elements to
   x   - alternative value that can be compared to Key

.SH Return value

   Iterator pointing to the first element that is greater than key. If no such element
   is found, past-the-end (see end()) iterator is returned.

.SH Complexity

   Logarithmic in the size of the container.

.SH Notes

            Feature-test macro           Value    Std               Feature
                                                        Heterogeneous comparison lookup
   __cpp_lib_generic_associative_lookup 201304L \fI(C++14)\fP in associative containers, for
                                                        overloads (3,4)

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   equal_range returns range of elements matching a specific key
               \fI(public member function)\fP 
   lower_bound returns an iterator to the first element not less than the given key
               \fI(public member function)\fP 

.SH Category:
     * Todo no example
