.TH std::experimental::unique_resource::operator*,std::experimental::unique_resource<R, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::unique_resource::operator*,std::experimental::unique_resource<R, \- std::experimental::unique_resource::operator*,std::experimental::unique_resource<R,

.SH Synopsis

   std::add_lvalue_reference_t<std::remove_pointer_t<R>> \fB(1)\fP (library fundamentals TS
       operator*() const noexcept;                           v3)
   R operator->() const noexcept;                        \fB(2)\fP (library fundamentals TS
                                                             v3)

   1) Access the object or function pointed by the underlying resource handle which is
   a pointer. This function participates in overload resolution only if
   std::is_pointer_v<R> is true and std::is_void_v<std::remove_pointer_t<R>> is false.
   If the resource handle is not pointing to an object or a function, the behavior is
   undefined.
   2) Get a copy of the underlying resource handle which is a pointer. This function
   participates in overload resolution only if std::is_pointer_v<R> is true. The return
   value is typically used to access the pointed object.

.SH Parameters

   \fI(none)\fP

.SH Return value

   1) The object or function pointed by the underlying resource handle.
   2) Copy of the underlying resource handle.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   get        accesses the underlying resource handle
              \fI(public member function)\fP 
   operator*  dereferences pointer to the managed object
   operator-> \fI(public member function of std::unique_ptr<T,Deleter>)\fP 

.SH Category:
     * Todo no example
