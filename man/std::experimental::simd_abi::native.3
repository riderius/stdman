.TH std::experimental::simd_abi::native 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::simd_abi::native \- std::experimental::simd_abi::native

.SH Synopsis
   Defined in header <experimental/simd>
   template< class T >                         (parallelism TS v2)
   using native = /*implementation-defined*/;

   native<T> is an implementation-defined alias for an ABI tag. This is the primary ABI
   tag to use for efficient explicit vectorization.

.SH Notes

   The intent is to use the ABI tag producing the most efficient data-parallel
   execution for the element type T that is supported on the currently targeted system.
   For target architectures without ISA extensions, the native<T> and compatible<T>
   aliases will likely be the same. For target architectures with ISA extensions,
   compiler flags may influence the native<T> alias while compatible<T> will be the
   same independent of such flags.

.SH See also

   scalar              tag type for storing a single element
   (parallelism TS v2) \fI(typedef)\fP 
   fixed_size          tag type for storing specified number of elements
   (parallelism TS v2) (alias template)
   compatible          tag type that ensures ABI compatibility
   (parallelism TS v2) (alias template)
   deduce              obtains an ABI type for given element type and number of
   deduce_t            elements
   (parallelism TS v2) \fI(class template)\fP 
