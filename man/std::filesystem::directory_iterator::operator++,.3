.TH std::filesystem::directory_iterator::operator++, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_iterator::operator++, \- std::filesystem::directory_iterator::operator++,

.SH Synopsis

   directory_iterator& operator++();                     \fB(1)\fP \fI(since C++17)\fP
   directory_iterator& increment( std::error_code& ec ); \fB(2)\fP \fI(since C++17)\fP

   Advances the iterator to the next entry. Invalidates all copies of the previous
   value of *this.

    This section is incomplete

.SH Parameters

   ec - error code to store error status to

.SH Return value

   *this

.SH Exceptions

   Any overload not marked noexcept may throw std::bad_alloc if memory allocation
   fails.

   1) Throws std::filesystem::filesystem_error on underlying OS API errors, constructed
   with the OS error code as the error code argument.
   2) Sets a std::error_code& parameter to the OS API error code if an OS API call
   fails, and executes ec.clear() if no errors occur.

.SH Example

    This section is incomplete
    Reason: no example

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to              Behavior as published              Correct behavior
   LWG 3013 C++17      error_code overload marked noexcept but can     noexcept removed
                       allocate memory

.SH Categories:
     * Todo without reason
     * Todo no example
