.TH std::range-default-formatter 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::range-default-formatter \- std::range-default-formatter

.SH Synopsis
   Defined in header <format>
   template< ranges::input_range R, class CharT >                    (since C++23)
   struct range-default-formatter<range_format::sequence, R,         (exposition only*)
   CharT>;

   The class template range-default-formatter for range types is specialized for
   formatting range as a sequence of elements if std::format_kind<R> is
   std::range_format::sequence.

.SH Member types

   Member type             Definition
   maybe-const-r (private) /*fmt-maybe-const*/<R, CharT>
                           (exposition-only member type*)

.SH Member objects

Member name Definition
            the underlying formatter of type
underlying_ std::range_formatter<std::remove_cvref_t<ranges::range_reference_t<maybe-const-r>>,
(private)   CharT>
            (exposition-only member object*)

.SH Member functions

   constructor           constructs a range-default-formatter
   (implicitly declared) \fI(public member function)\fP
   set_separator         sets a specified separator for the range formatted result
                         \fI(public member function)\fP
                         sets a specified opening and closing brackets for the range
   set_brackets          formatted result
                         \fI(public member function)\fP
   parse                 parses the format specifier as specified by range-format-spec
                         \fI(public member function)\fP
                         writes the range formatted output as specified by
   format                range-format-spec
                         \fI(public member function)\fP

std::range-default-formatter<std::range_format::sequence>::set_separator

   constexpr void set_separator( std::basic_string_view<CharT> sep ) noexcept;

   Equivalent to a call to underlying_.set_separator(sep).

std::range-default-formatter<std::range_format::sequence>::set_brackets

   constexpr void set_brackets( std::basic_string_view<CharT> opening,
                                std::basic_string_view<CharT> closing ) noexcept;

   Equivalent to a call to underlying_.set_brackets(opening, closing).

std::range-default-formatter<std::range_format::sequence>::parse

   template< class ParseContext >
   constexpr auto parse( ParseContext& ctx ) -> ParseContext::iterator;

   Equivalent to return underlying_.parse(ctx);.

   Returns an iterator past the end of the range-format-spec.

std::range-default-formatter<std::range_format::sequence>::format

   template< class FormatContext >
   auto format( maybe-const-r& elems, FormatContext& ctx ) const ->
   FormatContext::iterator;

   Equivalent to return underlying_.format(elems, ctx);.

   Returns an iterator past the end of the output range.

.SH See also

   formatter       defines formatting rules for a given type
   (C++20)         \fI(class template)\fP 
   range_formatter class template that helps implementing std::formatter
   (C++23)         specializations for range types
                   \fI(class template)\fP 
