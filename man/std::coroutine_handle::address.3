.TH std::coroutine_handle::address 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::coroutine_handle::address \- std::coroutine_handle::address

.SH Synopsis
   constexpr void* address() const noexcept;  \fI(since C++20)\fP

   Returns the underlying address of the coroutine_handle. The return value is non-null
   if and only if the current value of the coroutine_handle is obtained from a promise
   object of a coroutine.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The underlying address.

.SH Notes

   The return value is non-null for specialization std::noop_coroutine_handle, because
   a std::noop_coroutine_handle cannot be created without referring to a no-op
   coroutine.

.SH See also

   from_address     imports a coroutine from a pointer
   \fB[static]\fP (C++20) \fI(public static member function)\fP 
