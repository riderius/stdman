.TH std::geometric_distribution 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::geometric_distribution \- std::geometric_distribution

.SH Synopsis
   Defined in header <random>
   template< class IntType = int >  \fI(since C++11)\fP
   class geometric_distribution;

   Produces random non-negative integer values i, distributed according to discrete
   probability function:

   \\(P(i|p) = p \\cdot (1-p)^i\\)P(i|p) = p · (1 − p)i

   The value represents the number of failures in a series of independent yes/no trials
   (each succeeds with probability p), before exactly 1 success occurs.

   std::geometric_distribution<>(p) is exactly equivalent to
   std::negative_binomial_distribution<>(1, p). It is also the discrete counterpart of
   std::exponential_distribution.

   std::geometric_distribution satisfies RandomNumberDistribution.

.SH Template parameters

             The result type generated by the generator. The effect is undefined if
   IntType - this is not one of short, int, long, long long, unsigned short, unsigned
             int, unsigned long, or unsigned long long.

.SH Member types

   Member type         Definition
   result_type \fI(C++11)\fP IntType
   param_type \fI(C++11)\fP  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
   reset         resets the internal state of the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Characteristics
   p             returns the p distribution parameter (probability of a trial
   \fI(C++11)\fP       generating true)
                 \fI(public member function)\fP 
   param         gets or sets the distribution parameter object
   \fI(C++11)\fP       \fI(public member function)\fP 
   min           returns the minimum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 
   max           returns the maximum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 

.SH Non-member functions

   operator==
   operator!=                compares two distribution objects
   \fI(C++11)\fP                   \fI(function)\fP 
   \fI(C++11)\fP(removed in C++20)
   operator<<                performs stream input and output on pseudo-random number
   operator>>                distribution
   \fI(C++11)\fP                   \fI(function template)\fP 

.SH Example

   std::geometric_distribution<>(0.5) is the default and represents the number of coin
   tosses that are required to get heads.

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <map>
 #include <random>
 #include <string>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
  
     std::geometric_distribution<> d;
         // same as
         // std::negative_binomial_distribution<> d(1, 0.5):
  
     std::map<int, int> hist;
     for (int n = 0; n != 10000; ++n)
         ++hist[d(gen)];
  
     for (auto [x, y] : hist)
     {
         const char c = x < 10 ? x + '0' : x - 10 + 'a';
         std::cout << c << ' ' << std::string(y / 100, '*') << '\\n';
     }
 }

.SH Possible output:

 0 *************************************************
 1 *************************
 2 ************
 3 ******
 4 **
 5 *
 6
 7
 8
 9

.SH External links

   Weisstein, Eric W. "Geometric Distribution." From MathWorld — A Wolfram Web
   Resource.
