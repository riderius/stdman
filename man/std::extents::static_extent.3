.TH std::extents::static_extent 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::extents::static_extent \- std::extents::static_extent

.SH Synopsis
   static constexpr std::size_t static_extent( rank_type i ) noexcept;  (since C++23)

   Returns static extent size of an extents at the rank index i. If the rank index i is
   a dynamic extent, returns std::dynamic_extent.

.SH Parameters

   i - The rank index to get the static extent size of

.SH Return value

   The static extent size or std::dynamic_extent value.

.SH Example

   
// Run this code

 #include <iostream>
 #include <mdspan>
  
 int main()
 {
     std::extents<int, 1, 2> e1;
     std::extents<int, 3, std::dynamic_extent, std::dynamic_extent> e2(4, 5);
     std::cout << e1.static_extent(0) << ", " << e1.static_extent(1) << '\\n';
     std::cout << (e2.static_extent(0) == std::dynamic_extent) << ", "
               << (e2.static_extent(1) == std::dynamic_extent) << ", "
               << (e2.static_extent(2) == std::dynamic_extent) << '\\n';
 }

.SH Output:

 1, 2
 0, 1, 1

.SH See also

   extent  returns dynamic extent size of an extents at a certain rank index
           \fI(public member function)\fP 
   extent  obtains the size of an array type along a specified dimension
   \fI(C++11)\fP \fI(class template)\fP 
