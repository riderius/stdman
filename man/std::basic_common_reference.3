.TH std::basic_common_reference 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_common_reference \- std::basic_common_reference

.SH Synopsis
   Defined in header <utility>
   template< class T1, class T2, class U1, class U2,

             template<class> class TQual, template<class> class UQual >
     requires requires { typename
   std::pair<std::common_reference_t<TQual<T1>, UQual<U1>>,               (since C++23)
                                          
    std::common_reference_t<TQual<T2>, UQual<U2>>>; }

   struct basic_common_reference<std::pair<T1, T2>, std::pair<U1, U2>,
   TQual, UQual>;

   The common reference type of two pairs is a pair of both common reference types of
   corresponding element types of both pairs, where the cv and reference qualifiers on
   the pairs are applied to their element types.

   The common reference type is defined only if both pairs of corresponding element
   types have common reference types.

.SH Member types

   Member type Definition
               std::pair<std::common_reference_t<TQual<T1>, UQual<U1>>,
   type
                         std::common_reference_t<TQual<T2>, UQual<U2>>>

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   common_reference                        determines the common reference type of a
   basic_common_reference                  group of types
   (C++20)                                 \fI(class template)\fP 
   std::basic_common_reference<tuple-like> determines the common reference type of a
   (C++23)                                 tuple and a tuple-like type
                                           \fI(class template specialization)\fP 

.SH Category:
     * Todo no example
