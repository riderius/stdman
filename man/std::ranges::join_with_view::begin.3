.TH std::ranges::join_with_view::begin 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::join_with_view::begin \- std::ranges::join_with_view::begin

.SH Synopsis
   constexpr auto begin();                                             \fB(1)\fP (since
                                                                           C++23)
   constexpr auto begin() const

     requires ranges::input_range<const V> &&                          \fB(2)\fP (since
              ranges::forward_range<const Pattern> &&                      C++23)

              std::is_reference_v<ranges::range_reference_t<const V>>;

   Returns an iterator to the first element of the join_with_view.

   Let base_ denote the underlying view:

   1) Equivalent to return /*iterator*/<true>{*this, ranges::begin(base_)}; if V and
   Pattern each model __SimpleView and ranges::range_reference_t<V> is a reference
   type; otherwise equivalent to return /*iterator*/<false>{*this,
   ranges::begin(base_)};.
   2) Equivalent to return /*iterator*/<true>{*this, ranges::begin(base_)};.

.SH Parameters

   \fI(none)\fP

.SH Return value

   An iterator to the first element of the join_with_view, as described above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   end           returns an iterator or a sentinel to the end
   (C++23)       \fI(public member function)\fP 
   ranges::begin returns an iterator to the beginning of a range
   (C++20)       (customization point object)

.SH Category:
     * Todo no example
