.TH std::multimap::rbegin, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multimap::rbegin, \- std::multimap::rbegin,

.SH Synopsis

   reverse_iterator rbegin();                       \fB(1)\fP (noexcept since C++11)
   const_reverse_iterator rbegin() const;           \fB(2)\fP (noexcept since C++11)
   const_reverse_iterator crbegin() const noexcept; \fB(3)\fP \fI(since C++11)\fP

   Returns a reverse iterator to the first element of the reversed multimap. It
   corresponds to the last element of the non-reversed multimap. If the multimap is
   empty, the returned iterator is equal to rend().

   range-rbegin-rend.svg

.SH Parameters

   \fI(none)\fP

.SH Return value

   Reverse iterator to the first element.

.SH Complexity

   Constant.

.SH Notes

   The underlying iterator of the returned reverse iterator is the end iterator. Hence
   the returned iterator is invalidated if and when the end iterator is invalidated.

   libc++ backports crbegin() to C++98 mode.

.SH Example

   
// Run this code

 #include <algorithm>
 #include <iostream>
 #include <string>
 #include <map>
  
 int main()
 {
     std::multimap<std::string, int> map
     {
         {"█", 1},
         {"▒", 5},
         {"░", 3},
         {"▓", 7},
         {"▓", 8},
         {"░", 4},
         {"▒", 6},
         {"█", 2}
     };
  
     std::cout << "Print out in reverse order using const reverse iterators:\\n";
     std::for_each(map.crbegin(), map.crend(),
         [](std::pair<const std::string, int> const& e)
         {
             std::cout << "{ \\"" << e.first << "\\", " << e.second << " };\\n";
         });
  
     map.rbegin()->second = 42; // OK: non-const value is modifiable
 //  map.crbegin()->second = 42; // Error: cannot modify the const value
 }

.SH Possible output:

 Print out in reverse order using const reverse iterators:
 { "▓", 8 };
 { "▓", 7 };
 { "▒", 6 };
 { "▒", 5 };
 { "░", 4 };
 { "░", 3 };
 { "█", 2 };
 { "█", 1 };

.SH See also

   rend    returns a reverse iterator to the end
   crend   \fI(public member function)\fP 
   \fI(C++11)\fP
   rbegin  returns a reverse iterator to the beginning of a container or array
   crbegin \fI(function template)\fP 
   \fI(C++14)\fP
