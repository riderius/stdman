.TH std::negative_binomial_distribution::negative_binomial_distribution 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::negative_binomial_distribution::negative_binomial_distribution \- std::negative_binomial_distribution::negative_binomial_distribution

.SH Synopsis
   negative_binomial_distribution() :                                 \fB(1)\fP \fI(since C++11)\fP
   negative_binomial_distribution\fB(1)\fP {}
   explicit negative_binomial_distribution( IntType k, double p = 0.5 \fB(2)\fP \fI(since C++11)\fP
   );
   explicit negative_binomial_distribution( const param_type& params  \fB(3)\fP \fI(since C++11)\fP
   );

   Constructs a new distribution object.

   2) Uses k and p as the distribution parameters.
   3) Uses params as the distribution parameters.

.SH Parameters

   k      - the k distribution parameter (number of trial successes)
   p      - the p distribution parameter (probability of a trial generating true)
   params - the distribution parameter set

.SH Notes

   Requires that 0 < p â‰¤ 1 and 0 < k.

   If p == 1, subsequent calls to the operator() overload that does not accept a
   param_type object will cause undefined behavior.

   The default-constructed std::negative_binomial_distribution is equivalent to the
   default-constructed std::geometric_distribution.

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

     DR    Applied to      Behavior as published       Correct behavior
   P0935R0 C++11      default constructor was explicit made implicit
