.TH std::experimental::erase(std::vector) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::erase(std::vector) \- std::experimental::erase(std::vector)

.SH Synopsis
   Defined in header <experimental/vector>
   template< class T, class A, class U >                (library fundamentals TS v2)
   void erase( std::vector<T, A>& c, const U& value );

   Erases all elements that compare equal to value from the container. Equivalent to
   c.erase(std::remove(c.begin(), c.end(), value), c.end());.

.SH Parameters

   c     - container from which to erase
   value - value to be removed

.SH Complexity

   Linear.

.SH Example

   
// Run this code

 #include <experimental/vector>
 #include <iostream>
  
 auto show = [](const auto& container)
 {
     for (auto e : container)
         std::cout << e;
     std::cout << '\\n';
 };
  
 int main()
 {
     std::vector<int> data{1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1};
     show(data);
     std::experimental::erase(data, 1);
     show(data);
 }

.SH Output:

 11141112111
 42

.SH See also

   remove                      removes elements satisfying specific criteria
   remove_if                   \fI(function template)\fP 
   erase_if (std::vector)      erases all elements satisfying a predicate from a
   (library fundamentals 2 TS) std::vector
                               \fI(function template)\fP 
