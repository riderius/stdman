.TH std::flat_set::clear 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::flat_set::clear \- std::flat_set::clear

.SH Synopsis
   void clear() noexcept;  (since C++23)

   Erases all elements from the container adaptor. After this call, size() returns
   zero.

   Invalidates any references, pointers, and iterators referring to contained elements.

.SH Parameters

   \fI(none)\fP

.SH Return value

   \fI(none)\fP

.SH Complexity

   Linear in the size of the container adaptor, i.e., the number of elements.

.SH Example

   
// Run this code

 #include <iostream>
 #include <string_view>
 #include <flat_set>
  
 void print_info(std::string_view rem, const std::flat_set<int>& v)
 {
     std::cout << rem << "{ ";
     for (const auto& value : v)
         std::cout << value << ' ';
     std::cout << "}\\n";
     std::cout << "Size=" << v.size() << '\\n';
 }
  
 int main()
 {
     std::flat_set<int> container{1, 2, 3};
     print_info("Before clear: ", container);
     container.clear();
     print_info("After clear: ", container);
 }

.SH Output:

 Before clear: { 1 2 3 }
 Size=3
 After clear: { }
 Size=0

.SH See also

   erase erases elements
         \fI(public member function)\fP 
