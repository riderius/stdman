.TH std::nontype,std::nontype_t 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::nontype,std::nontype_t \- std::nontype,std::nontype_t

.SH Synopsis
   Defined in header <utility>
   template< auto V >                                    \fB(1)\fP (since C++26)
   struct nontype_t { explicit nontype_t() = default; };
   template< auto V >                                    \fB(2)\fP (since C++26)
   inline constexpr std::nontype_t<V> nontype {};

   1) The class template std::nontype_t can be used in the constructor's parameter list
   to match the intended tag.
   2) The corresponding std::nontype instance of \fB(1)\fP is a disambiguation argument tag
   that can be passed to the constructors of std::function_ref to indicate that the
   contained object should be constructed with the value of the non-type template
   parameter V.

.SH Template parameters

   V - non-type template parameter of a structural type.

.SH See also

   function_ref non-owning reference to any callable object with specified function
   (C++26)      call signature
                \fI(class template)\fP 
