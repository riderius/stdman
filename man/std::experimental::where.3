.TH std::experimental::where 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::where \- std::experimental::where

.SH Synopsis
   Defined in header <experimental/simd>
   template< class T, class Abi >

   where_expression<simd_mask<T, Abi>, simd<T, Abi>>            \fB(1)\fP (parallelism TS v2)
       where( const typename simd<T, Abi>::mask_type& mask,

              simd<T, Abi>& value ) noexcept;
   template< class T, class Abi >

   const_where_expression<simd_mask<T, Abi>, const simd<T,
   Abi>>                                                        \fB(2)\fP (parallelism TS v2)
       where( const typename simd<T, Abi>::mask_type& mask,

              const simd<T, Abi>& value ) noexcept;
   template< class T, class Abi >

   where_expression<simd_mask<T, Abi>, simd_mask<T, Abi>>       \fB(3)\fP (parallelism TS v2)
       where( const type_identity_t<simd_mask<T, Abi>>& mask,

              simd_mask<T, Abi>& value ) noexcept;
   template< class T, class Abi >

   const_where_expression<simd_mask<T, Abi>, const simd_mask<T,
   Abi>>                                                        \fB(4)\fP (parallelism TS v2)
       where( const type_identity_t<simd_mask<T, Abi>>& mask,

              const simd_mask<T, Abi>& value ) noexcept;
   template< class T >

   where_expression<bool, T>                                    \fB(5)\fP (parallelism TS v2)

       where( /*see below*/ mask, T& value ) noexcept;
   template< class T >

   const_where_expression<bool, const T>                        \fB(6)\fP (parallelism TS v2)

       where( /*see below*/ mask, const T& value ) noexcept;

   Constructs a new const_where_expression or where_expression.

   1-6) Constructs a where_expression from given mask and value parameters.

.SH Parameters

   1-4)

   mask  - the simd_mask object
   value - reference to the simd object that mask applies on

   5,6)

   mask  - the mask of type bool
   value - reference to the scalar that mask applies on

.SH Return value

   The constructed const_where_expression or where_expression.

.SH Notes

   5,6) Uses implementation defined type of mask, so that implicit conversions from
   other types to bool is disabled.

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:
     * Todo no example
