.TH std::chrono::operator==,(std::chrono::year) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::operator==,(std::chrono::year) \- std::chrono::operator==,(std::chrono::year)

.SH Synopsis
   Defined in header <chrono>
   constexpr bool operator==( const std::chrono::year& x,             \fB(1)\fP \fI(since C++20)\fP
                              const std::chrono::year& y ) noexcept;
   constexpr std::strong_ordering operator<=>( const
   std::chrono::year& x,                                              \fB(2)\fP \fI(since C++20)\fP
                                               const
   std::chrono::year& y ) noexcept;

   Compare the two std::chrono::year x and y.

   The <, <=, >, >=, and != operators are synthesized from operator<=> and operator==
   respectively.

.SH Return value

   1) int(x) == int(y)
   2) int(x) <=> int(y)

.SH Example

   
// Run this code

 #include <chrono>
 #include <iostream>
  
 int main()
 {
     using namespace std::chrono;
  
     constexpr year y1{2020};
     constexpr year y2{2021};
  
     std::cout << std::boolalpha << (y1 != y2) << '\\n';
  
     static_assert((2020y < 2023y) && (2020y == 2020y) && (2020y <= 2023y) &&
                   (2023y > 2020y) && (2023y != 2020y) && (2023y >= 2020y));
 }

.SH Output:

 true
