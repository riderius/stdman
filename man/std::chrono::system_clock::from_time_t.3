.TH std::chrono::system_clock::from_time_t 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::system_clock::from_time_t \- std::chrono::system_clock::from_time_t

.SH Synopsis
   static std::chrono::system_clock::time_point from_time_t( std::time_t  \fI(since C++11)\fP
   t ) noexcept;

   Converts t to a time point type, using the coarser precision of the two types.

   If time_point has lower precision, it is implementation defined whether the value is
   rounded or truncated.

.SH Parameters

   t - std::time_t value to convert

.SH Return value

   A value of type std::chrono::system_clock::time_point representing t.

.SH Example

   
// Run this code

 #include <chrono>
 #include <ctime>
 #include <iostream>
 #include <thread>
  
 int main()
 {
     using namespace std::chrono_literals;
  
     const std::time_t t = std::time(nullptr); // usually has "1 second" precision
  
     const auto from = std::chrono::system_clock::from_time_t(t);
  
     std::this_thread::sleep_for(500ms);
  
     const auto diff = std::chrono::system_clock::now() - from;
  
     std::cout << diff << " ("
               << std::chrono::round<std::chrono::milliseconds>(diff)
               << ")\\n";
 }

.SH Possible output:

 987654321ns (987ms)

.SH See also

   to_time_t converts a system clock time point to std::time_t
   \fB[static]\fP  \fI(public static member function)\fP 
