.TH std::counting_semaphore::release 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::counting_semaphore::release \- std::counting_semaphore::release

.SH Synopsis
   void release( std::ptrdiff_t update = 1 );  \fI(since C++20)\fP

   Atomically increments the internal counter by the value of update. Any thread(s)
   waiting for the counter to be greater than 0, such as due to being blocked in
   acquire, will subsequently be unblocked.

.SH Preconditions

   Both update >= 0 and update <= max() - counter are true, where counter is the value
   of the internal counter.

.SH Parameters

   update - the amount to increment the internal counter by

.SH Exceptions

   May throw std::system_error.

.SH See also

   acquire           decrements the internal counter or blocks until it can
                     \fI(public member function)\fP 
   try_acquire       tries to decrement the internal counter without blocking
                     \fI(public member function)\fP 
                     tries to decrement the internal counter, blocking for up to a
   try_acquire_for   duration time
                     \fI(public member function)\fP 
                     tries to decrement the internal counter, blocking until a point in
   try_acquire_until time
                     \fI(public member function)\fP 
