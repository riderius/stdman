.TH std::chrono::hh_mm_ss 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::hh_mm_ss \- std::chrono::hh_mm_ss

.SH Synopsis
   Defined in header <chrono>
   template< class Duration >  \fI(since C++20)\fP
   class hh_mm_ss;

   The class template hh_mm_ss splits a std::chrono::duration into a "broken down" time
   such as hours:minutes:seconds, with the precision of the split determined by the
   Duration template parameter. It is primarily a formatting tool.

   Duration must be a specialization of std::chrono::duration, otherwise the program is
   ill-formed.

.SH Member constants

   constexpr unsigned the smallest possible integer in the range [0, 18] such that
   fractional_width   precision (see below) will exactly represent the value of
   \fB[static]\fP           Duration{1}, or 6 if there's no such integer
                      \fI(public static member constant)\fP

.SH Member types

   Member type Definition
               std::chrono::duration<std::common_type_t<Duration::rep,
   precision   std::chrono::seconds::rep>,                       std::ratio<1,
               10^fractional_width>>

.SH Member functions

   constructor        constructs a hh_mm_ss
                      \fI(public member function)\fP 
   is_negative
   hours              obtains components of the broken-down time
   minutes            \fI(public member function)\fP 
   seconds
   subseconds
   operator precision obtains the stored std::chrono::duration
   to_duration        \fI(public member function)\fP 

.SH Non-member functions

   operator<< outputs a hh_mm_ss into a stream
   (C++20)    \fI(function template)\fP 

.SH Helper classes

   std::formatter<std::chrono::hh_mm_ss> formatting support for hh_mm_ss
   (C++20)                               \fI(class template specialization)\fP 
