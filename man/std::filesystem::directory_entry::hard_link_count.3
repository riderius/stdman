.TH std::filesystem::directory_entry::hard_link_count 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_entry::hard_link_count \- std::filesystem::directory_entry::hard_link_count

.SH Synopsis
   std::uintmax_t hard_link_count() const;                            \fB(1)\fP \fI(since C++17)\fP
   std::uintmax_t hard_link_count( std::error_code& ec ) const        \fB(2)\fP \fI(since C++17)\fP
   noexcept;

   If the number of hard links is cached in this directory_entry, returns the cached
   value. Otherwise, returns:

   1) std::filesystem::hard_link_count(path()),
   2) std::filesystem::hard_link_count(path(), ec).

.SH Parameters

   ec - out-parameter for error reporting in the non-throwing overload

.SH Return value

   The number of hard links for the referred-to filesystem object.

.SH Exceptions

   Any overload not marked noexcept may throw std::bad_alloc if memory allocation
   fails.

   1) Throws std::filesystem::filesystem_error on underlying OS API errors, constructed
   with p as the first path argument and the OS error code as the error code argument.
   2) Sets a std::error_code& parameter to the OS API error code if an OS API call
   fails, and executes ec.clear() if no errors occur.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   hard_link_count returns the number of hard links referring to the specific file
   \fI(C++17)\fP         \fI(function)\fP 

.SH Category:
     * Todo no example
