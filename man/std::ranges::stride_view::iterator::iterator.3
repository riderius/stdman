.TH std::ranges::stride_view::iterator::iterator 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::stride_view::iterator::iterator \- std::ranges::stride_view::iterator::iterator

.SH Synopsis
   /*iterator*/()
       requires std::default_initializable<ranges::iterator_t<Base>> \fB(1)\fP (since C++23)
   = default;
   constexpr /*iterator*/( /*iterator*/<!Const> i )

       requires Const and
           std::convertible_to<ranges::iterator_t<V>,                \fB(2)\fP (since C++23)
   ranges::iterator_t<Base>> and

           std::convertible_to<ranges::sentinel_t<V>,
   ranges::sentinel_t<Base>>;
   private:

   constexpr /*iterator*/( /*Parent*/& parent,                           (exposition
                           ranges::iterator_t<Base> current,         \fB(3)\fP only*)

                           ranges::range_difference_t<Base> missing
   = 0 );

   Constructs an iterator.

   1) Default constructor. Value-initializes:
     * current_ with ranges::iterator_t<Base>(),
     * end_ with ranges::sentinel_t<Base>(),
     * stride_ with 0,
     * missing_ with 0.
   2) Conversion from /*iterator*/<false> to /*iterator*/<true>. Initializes:
     * current_ with std::move(i.current_),
     * end_ with std::move(i.end_),
     * stride_ with i.stride_,
     * missing_ with i.missing_.
   3) A private constructor which is used by stride_view::begin and stride_view::end.
   This constructor is not accessible to users. Initializes
     * current_ with std::move(current),
     * end_ with ranges::end(parent->base_),
     * stride_ with parent->stride_,
     * missing_ with missing.

.SH Parameters

   i - an /*iterator*/<false>

.SH Example

    This section is incomplete
    Reason: no example

.SH Category:
     * Todo no example
