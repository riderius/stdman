.TH std::basic_stacktrace::swap 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_stacktrace::swap \- std::basic_stacktrace::swap

.SH Synopsis
   void swap( basic_stacktrace& other ) noexcept(/* see below */);  (since C++23)

   Exchanges the contents of the container with those of other. Does not invoke any
   move, copy, or swap operations on individual stacktrace_entry objects.

   All iterators and references remain valid. The end() iterator is invalidated.

   If std::allocator_traits<allocator_type>::propagate_on_container_swap::value is
   true, then the allocators are exchanged using an unqualified call to non-member
   swap. Otherwise, they are not swapped (and if get_allocator() !=
   other.get_allocator(), the behavior is undefined).

.SH Parameters

   other - basic_stacktrace to exchange the contents with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:  
   noexcept(std::allocator_traits<Allocator>::propagate_on_container_swap::value
   || std::allocator_traits<Allocator>::is_always_equal::value)

.SH Complexity

   Constant.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   std::swap(std::basic_stacktrace) specializes the std::swap algorithm
   (C++23)                          \fI(function template)\fP 

.SH Categories:
     * conditionally noexcept
     * Todo no example
