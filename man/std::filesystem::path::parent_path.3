.TH std::filesystem::path::parent_path 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::path::parent_path \- std::filesystem::path::parent_path

.SH Synopsis
   path parent_path() const;  \fI(since C++17)\fP

   Returns the path to the parent directory.

   If has_relative_path() returns false, the result is a copy of *this. Otherwise, the
   result is a path whose generic format pathname is the longest prefix of the generic
   format pathname of *this that produces one fewer element in its iteration.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The path to the parent directory, or a copy of *this if not has_relative_path().

.SH Exceptions

   May throw implementation-defined exceptions.

.SH Example

   
// Run this code

 #include <filesystem>
 #include <iostream>
 namespace fs = std::filesystem;
  
 int main()
 {
     for (fs::path p : {"/var/tmp/example.txt", "/", "/var/tmp/."})
         std::cout << "The parent path of " << p
                   << " is " << p.parent_path() << '\\n';
 }

.SH Possible output:

 The parent path of "/var/tmp/example.txt" is "/var/tmp"
 The parent path of "/" is "/"
 The parent path of "/var/tmp/." is "/var/tmp"

.SH See also

   root_name      returns the root-name of the path, if present
                  \fI(public member function)\fP 
   root_directory returns the root directory of the path, if present
                  \fI(public member function)\fP 
   root_path      returns the root path of the path, if present
                  \fI(public member function)\fP 
