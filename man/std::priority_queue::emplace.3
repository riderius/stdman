.TH std::priority_queue::emplace 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::priority_queue::emplace \- std::priority_queue::emplace

.SH Synopsis
   template< class... Args >        \fI(since C++11)\fP
   void emplace( Args&&... args );

   Pushes a new element to the priority queue. The element is constructed in-place,
   i.e. no copy or move operations are performed. The constructor of the element is
   called with exactly the same arguments as supplied to the function.

   Effectively calls

 c.emplace_back(std::forward<Args>(args)...);
 std::push_heap(c.begin(), c.end(), comp);

.SH Parameters

   args - arguments to forward to the constructor of the element

.SH Return value

   \fI(none)\fP

.SH Complexity

   Logarithmic number of comparisons plus the complexity of Container::emplace_back.

.SH Example

   
// Run this code

 #include <iostream>
 #include <queue>
  
 struct S
 {
     int id;
  
     S(int i, double d, std::string s) : id{i}
     {
         std::cout << "S::S(" << i << ", " << d << ", \\"" << s << "\\");\\n";
     }
     friend bool operator< (S const& x, S const& y) { return x.id < y.id; }
 };
  
 int main()
 {
     std::priority_queue<S> queue;
     queue.emplace(42, 3.14, "C++");
     std::cout << "id: " << queue.top().id << '\\n';
 }

.SH Output:

 S::S(42, 3.14, "C++")
 id = 42

.SH See also

   push inserts element and sorts the underlying container
        \fI(public member function)\fP 
   pop  removes the top element
        \fI(public member function)\fP 
