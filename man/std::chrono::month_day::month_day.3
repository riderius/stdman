.TH std::chrono::month_day::month_day 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::month_day::month_day \- std::chrono::month_day::month_day

.SH Synopsis
   month_day() = default;                                     \fB(1)\fP \fI(since C++20)\fP
   constexpr month_day( const std::chrono::month& m,          \fB(2)\fP \fI(since C++20)\fP
                        const std::chrono::day& d ) noexcept;

   Constructs a month_day.

   1) Default constructor leaves the stored month and day values uninitialized.
   2) Constructs a month_day that stores the month m and the day d.

.SH Notes

   A more convenient way to construct a month_day is with operator/, e.g.,
   std::chrono::April/1.

.SH Example

   
// Run this code

 #include <chrono>
 #include <iostream>
  
 int main()
 {
     using namespace std::chrono_literals;
     constexpr auto mo_da = std::chrono::month_day(std::chrono::February, 29d);
     std::cout << static_cast<unsigned>(mo_da.day()) << '/'
               << static_cast<unsigned>(mo_da.month()) << '\\n';
 }

.SH Output:

 29/2

.SH See also

   operator/ conventional syntax for Gregorian calendar date creation
   (C++20)   \fI(function)\fP 
