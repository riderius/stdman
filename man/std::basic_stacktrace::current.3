.TH std::basic_stacktrace::current 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_stacktrace::current \- std::basic_stacktrace::current

.SH Synopsis
   static basic_stacktrace current( const allocator_type& alloc =     \fB(1)\fP (since C++23)
                                        allocator_type() ) noexcept;
   static basic_stacktrace current( size_type skip, const
   allocator_type& alloc =                                            \fB(2)\fP (since C++23)
                                        allocator_type() ) noexcept;
   static basic_stacktrace current( size_type skip, size_type
   max_depth,
                                                                      \fB(3)\fP (since C++23)
                                    const allocator_type& alloc =

                                        allocator_type() ) noexcept;

   Let s[i] (0 â‰¤ i < n) denote the (i+1)-th stacktrace entry in the stacktrace of the
   current evaluation in the current thread of execution, where n is the count of the
   stacktrace entries in the stackentry.

   1) Attempts to create a basic_stacktrace consisting of s[0], s[1], ..., s[n - 1].
   2) Attempts to create a basic_stacktrace consisting of s[m], s[m + 1], ..., s[n -
   1], where m is min(skip, n).
   3) Attempts to create a basic_stacktrace consisting of s[m], s[m + 1], ..., s[o -
   1], where m is min(skip, n) and o is min(skip + max_depth, n). The behavior is
   undefined if the skip + max_depth < skip (i.e. the mathematical result of skip +
   max_depth overflows).

   In all cases, alloc is stored into the created basic_stacktrace and used to allocate
   the storage for stacktrace entries.

.SH Parameters

   alloc     - allocator to use for all memory allocations of the constructed
               basic_stacktrace
   skip      - the number of stacktrace entries to skip
   max_depth - the maximum depth of the stacktrace entries

.SH Return value

   If the allocation succeeds, the basic_stacktrace described above.

   Otherwise, an empty basic_stacktrace.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   constructor   creates a new basic_stacktrace
                 \fI(public member function)\fP 
   current       constructs a new source_location corresponding to the location of the
   \fB[static]\fP      call site
                 \fI(public static member function of std::source_location)\fP 

.SH Category:
     * Todo no example
