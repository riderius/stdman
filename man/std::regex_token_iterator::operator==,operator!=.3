.TH std::regex_token_iterator::operator==,operator!= 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::regex_token_iterator::operator==,operator!= \- std::regex_token_iterator::operator==,operator!=

.SH Synopsis
   bool operator==( const regex_token_iterator& other ) const; \fB(1)\fP \fI(since C++11)\fP
   bool operator!=( const regex_token_iterator& other ) const; \fB(2)\fP \fI(since C++11)\fP
                                                                   \fI(until C++20)\fP

   Checks whether *this and other are equivalent.

   Two regex token iterators are equal if:

   a) They are both end-of-sequence iterators.
   b) They are both suffix iterators and the suffixes are equal.
   c) Neither of them is end-of-sequence or suffix iterator and:

     * position == other.position
     * N == other.N
     * subs == other.subs

   1) Checks whether *this is equal to other.
   2) Checks whether *this is not equal to other.

   The != operator is synthesized from operator==. \fI(since C++20)\fP

    This section is incomplete
    Reason: Explain better. For example, subs is an exposition-only vector of matched
    sub-expressions.

.SH Parameters

   other - another regex token iterator to compare to

.SH Return value

   1) true if *this is equal to other, false otherwise.
   2) true if *this is not equal to other, false otherwise.
.SH Category:
     * Todo with reason
