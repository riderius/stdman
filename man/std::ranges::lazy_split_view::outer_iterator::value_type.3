.TH std::ranges::lazy_split_view::outer_iterator::value_type 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::lazy_split_view::outer_iterator::value_type \- std::ranges::lazy_split_view::outer_iterator::value_type

.SH Synopsis
   struct value_type : ranges::view_interface<value_type>  \fI(since C++20)\fP

   The value type of the iterator ranges::lazy_split_view<V,
   Pattern>::/*outer_iterator*/<Const>.

.SH Member functions

   constructor   constructs a value_type object
   (C++20)       \fI(public member function)\fP
   begin         returns an inner_iterator to the beginning of the inner range
   (C++20)       \fI(public member function)\fP
   end           returns a std::default_sentinel
   (C++20)       \fI(public member function)\fP
         Inherited from std::ranges::view_interface
   empty         returns whether the derived view is empty. Provided if it satisfies
   (C++20)       sized_range or forward_range.
                 \fI(public member function of std::ranges::view_interface<D>)\fP 
   cbegin        returns a constant iterator to the beginning of the range.
   (C++23)       \fI(public member function of std::ranges::view_interface<D>)\fP 
   cend          returns a sentinel for the constant iterator of the range.
   (C++23)       \fI(public member function of std::ranges::view_interface<D>)\fP 
   operator bool returns whether the derived view is not empty. Provided if
   (C++20)       ranges::empty is applicable to it.
                 \fI(public member function of std::ranges::view_interface<D>)\fP 
   front         returns the first element in the derived view. Provided if it
   (C++20)       satisfies forward_range.
                 \fI(public member function of std::ranges::view_interface<D>)\fP 

.SH Member functions

std::ranges::lazy_split_view::outer_iterator::value_type::value_type

   value_type() = default;                              \fB(1)\fP \fI(since C++20)\fP
   constexpr explicit value_type(/*outer_iterator*/ i); \fB(2)\fP \fI(since C++20)\fP

   1) Value initializes the i_ via its default member initializer (=
   /*outer_iterator*/()).
   2) Initializes i_ with std::move(i).

std::ranges::lazy_split_view::outer_iterator::value_type::begin

   constexpr /*inner_iterator*/<Const> begin() const;  \fI(since C++20)\fP

   Equivalent to return /*inner_iterator*/<Const>{i_};.

std::ranges::lazy_split_view::outer_iterator::value_type::end

   constexpr std::default_sentinel_t end() const noexcept;  \fI(since C++20)\fP

   Returns std::default_sentinel.

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to              Behavior as published              Correct behavior
   LWG 3593 C++20      end always returns std::default_sentinel but    made noexcept
                       might not be noexcept
