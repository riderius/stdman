.TH std::chrono::tai_clock 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::tai_clock \- std::chrono::tai_clock

.SH Synopsis
   Defined in header <chrono>
   class tai_clock;            \fI(since C++20)\fP

   The clock std::chrono::tai_clock is a Clock that represents International Atomic
   Time (TAI). It measures time since 00:00:00, 1 January 1958, and is offset 10
   seconds ahead of UTC at that date (i.e., its epoch, 1958-01-01 00:00:00 TAI, is
   1957-12-31 23:59:50 UTC).

   Leap seconds are not inserted into TAI. Thus, every time a leap second is inserted
   into UTC, UTC falls another second behind TAI. As of December 2017, UTC is 37
   seconds behind TAI, reflecting the 10-second initial offset and the 27 leap seconds
   inserted between 1958 and 2017. Thus, 2018-01-01 00:00:00 UTC is equivalent to
   2018-01-01 00:00:37 TAI.

   tai_clock meets the Clock requirements. It does not meet the TrivialClock
   requirements unless the implementation can guarantee that now() does not throw an
   exception.

.SH Member types

   Member type Definition
   rep         signed arithmetic type representing the number of ticks in the clock's
               duration
   period      a std::ratio type representing the tick period of the clock, in seconds
   duration    std::chrono::duration<rep, period>, capable of representing negative
               durations
   time_point  std::chrono::time_point<std::chrono::tai_clock>

.SH Member constants

                            true if the time between ticks is always constant, i.e.
   constexpr bool is_steady calls to now() return values that increase monotonically
   \fB[static]\fP                 even in case of some external clock adjustment, otherwise
                            false
                            \fI(public static member constant)\fP

.SH Member functions

   now      returns a std::chrono::time_point representing the current point in time
   \fB[static]\fP \fI(public static member function)\fP 
   to_utc   converts tai_time to utc_time
   \fB[static]\fP \fI(public static member function)\fP 
   from_utc converts utc_time to tai_time
   \fB[static]\fP \fI(public static member function)\fP 
