.TH std::ranges::zip_transform_view::end 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::zip_transform_view::end \- std::ranges::zip_transform_view::end

.SH Synopsis
   constexpr auto end();                                        \fB(1)\fP (since C++23)
   constexpr auto end() const

       requires ranges::range<const /*InnerView*/> &&           \fB(2)\fP (since C++23)
                std::regular_invocable<const F&,

                    ranges::range_reference_t<const Views>...>;

   Returns an iterator or a sentinel that compares equal to the end iterator of the
   zip_transform_view.

   Let zip_ denote the underlying tuple of views:

   1) Equivalent to:
   if constexpr (ranges::common_range</*InnerView*/>)

       return /*iterator*/<false>(*this, zip_.end());
   else

       return /*sentinel*/<false>(zip_.end());
   2) Equivalent to:
   if constexpr (ranges::common_range<const /*InnerView*/>)

       return /*iterator*/<true>(*this, zip_.end());
   else

       return /*sentinel*/<true>(zip_.end());

.SH Parameters

   \fI(none)\fP

.SH Return value

   An iterator or sentinel representing the end of the zip_transform_view, as described
   above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   begin       returns an iterator to the beginning
   (C++23)     \fI(public member function)\fP 
   ranges::end returns a sentinel indicating the end of a range
   (C++20)     (customization point object)

.SH Category:
     * Todo no example
