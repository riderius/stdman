.TH std::ranges::slide_view::iterator 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::slide_view::iterator \- std::ranges::slide_view::iterator

.SH Synopsis
   template< bool Const >  (since C++23)
   class /*iterator*/      (exposition only*)

   The return type of slide_view::begin, and of slide_view::end when the underlying
   view V is a common_range.

   The type /*iterator*/<true> is returned by the const-qualified overloads. The type
   /*iterator*/<false> is returned by the non-const-qualified overloads.

.SH Member types

   Member type       Definition
   Base (private)    const V if Const is true, otherwise V.
                     (exposition-only member type*)
   iterator_category std::input_iterator_tag
                       * std::random_access_iterator_tag, if Base models
                         random_access_range. Otherwise,
   iterator_concept    * std::bidirectional_iterator_tag, if Base models
                         bidirectional_range. Otherwise,
                       * std::forward_iterator_tag.
   value_type        decltype(views::counted(current_, n_))
   difference_type   ranges::range_difference_t<Base>

   Data members

   Member type         Definition
                       ranges::iterator_t<Base>, holds an iterator to the first
   current_ (private)  underlying element of the current window in slide_view
                       (exposition-only member object*)
                       ranges::iterator_t<Base>, holds an iterator to the one-past-end
   last_ele_ (private) underlying element of the current window in slide_view. Present
   (optional)          only if Base models /*slide-caches-first*/.
                       (exposition-only member object*)
                       ranges::range_difference_t<Base>, holds the window width of
   n_ (private)        slide_view.
                       (exposition-only member object*)

.SH Member functions

   constructor     constructs an iterator
   (C++23)         \fI(public member function)\fP
   operator*       accesses the element
   (C++23)         \fI(public member function)\fP
   operator[]      accesses an element by index
   (C++23)         \fI(public member function)\fP
   operator++
   operator++(int)
   operator--      advances or decrements the underlying iterators
   operator--(int) \fI(public member function)\fP 
   operator+=
   operator-=
   (C++23)

.SH Non-member functions

   operator==
   operator<
   operator>   compares the underlying iterators
   operator<=  \fI(function)\fP
   operator>=
   operator<=>
   (C++23)
   operator+   performs iterator arithmetic
   operator-   \fI(function)\fP
   (C++23)

.SH Example

    This section is incomplete
    Reason: no example

.SH References

     * C++23 standard (ISO/IEC 14882:2023):

     * 26.7.29.3 Class template slide_view::iterator [range.slide.iterator]

.SH See also


.SH Category:
     * Todo no example
