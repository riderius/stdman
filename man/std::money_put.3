.TH std::money_put 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::money_put \- std::money_put

.SH Synopsis
   Defined in header <locale>
   template<

       class CharT,
       class OutputIt = std::ostreambuf_iterator<CharT>

   > class money_put;

   Class std::money_put encapsulates the rules for formatting monetary values as
   strings. The standard I/O manipulator std::put_money uses the std::money_put facet
   of the I/O stream's locale.

   std-money put-inheritance.svg

                                   Inheritance diagram

   If a std::money_put specialization is not guaranteed to be provided by the standard
   library (see below), the behaviors of its put() and do_put() are not guaranteed as
   specified.

.SH Specializations

   The standard library is guaranteed to provide the following specializations (they
   are required to be implemented by any locale object):

   Defined in header <locale>
   std::money_put<char>    creates narrow string representations of monetary values
   std::money_put<wchar_t> creates wide string representations of monetary values

   In addition, the standard library is also guaranteed to provide every specialization
   that satisfies the following type requirements:

     * CharT is one of
          * char,
          * wchar_t, and
          * any other implementation-defined character container type that meets the
            requirements for a character on which any of the iostream components can be
            instantiated; and
     * OutputIt must meet the requirements of LegacyOutputIterator.

.SH Member types

   Member type Definition
   char_type   CharT
   string_type std::basic_string<CharT>
   iter_type   OutputIt

.SH Member functions

   constructor   constructs a new money_put facet
                 \fI(public member function)\fP
   put           invokes do_put
                 \fI(public member function)\fP

.SH Protected member functions

   destructor   destructs a money_put facet
                \fI(protected member function)\fP
   do_put       formats a monetary value and writes to output stream
   \fB[virtual]\fP    \fI(virtual protected member function)\fP 

.SH Member objects

   static std::locale::id id id of the locale
                             \fI(public member object)\fP

.SH Example

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <iterator>
 #include <locale>
  
 int main()
 {
     // using the I/O manipulator
     std::cout.imbue(std::locale("en_US.UTF-8"));
     std::cout << "American locale: "
               << std::showbase << std::put_money(12345678.9) << '\\n';
  
     // using the facet directly
     std::cout.imbue(std::locale("de_DE.UTF-8"));
     std::cout << "German locale: ";
     auto& f = std::use_facet<std::money_put<char>>(std::cout.getloc());
     f.put({std::cout}, false, std::cout, std::cout.fill(), 12345678.9);
     std::cout << '\\n';
 }

.SH Output:

 American locale: $123,456.79
 German locale: 123.456,79 â‚¬

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to        Behavior as published              Correct behavior
                       money_put was guaranteed to accept   only guarantees to accept
                       any CharT that                       char,
   LWG 427  C++98      meets the requirements for a         wchar_t and other
                       character on which                   implementation-
                       any of the iostream components can   defined character types
                       be instantiated
                       only character type CharT could be   can guarantee to accept
   LWG 2392 C++98      guaranteed to be accepted by         implementation-
                       money_put                            defined character container
                                                            types

.SH See also

              defines monetary formatting parameters used by std::money_get and
   moneypunct std::money_put
              \fI(class template)\fP 
   money_get  parses and constructs a monetary value from an input character sequence
              \fI(class template)\fP 
   put_money  formats and outputs a monetary value
   \fI(C++11)\fP    \fI(function template)\fP 
