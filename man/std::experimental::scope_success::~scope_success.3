.TH std::experimental::scope_success::~scope_success 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::scope_success::~scope_success \- std::experimental::scope_success::~scope_success

.SH Synopsis
   ~scope_success() noexcept(noexcept(std::declval<EF&>()()));  (library fundamentals
                                                                TS v3)

   Calls the exit function if the result of std::uncaught_exceptions() is less than or
   equal to the counter of uncaught exceptions (typically on normal exit) and the
   scope_success is active, then destroys the stored EF (if it is a function object)
   and any other non-static data members.

.SH Exceptions

   Throws any exception thrown by calling the exit function.

.SH Notes

   Whether the destructor is called on stack unwinding can be detected by the
   comparison of the result of std::uncaught_exceptions() and the counter of uncaught
   exceptions in the scope_success.

   Unlike other classes or class template specializations in the C++ standard library
   and other C++ TR/TS's, scope_success's destructor is permitted to throw an
   exception.

.SH See also

   release makes the scope_success inactive
           \fI(public member function)\fP 
