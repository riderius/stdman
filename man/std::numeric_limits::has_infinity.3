.TH std::numeric_limits::has_infinity 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::numeric_limits::has_infinity \- std::numeric_limits::has_infinity

.SH Synopsis
   static const bool has_infinity;      \fI(until C++11)\fP
   static constexpr bool has_infinity;  \fI(since C++11)\fP

   The value of std::numeric_limits<T>::has_infinity is true for all types T capable of
   representing the positive infinity as a distinct special value. This constant is
   meaningful for all floating-point types and is guaranteed to be true if
   std::numeric_limits<T>::is_iec559 == true.

.SH Standard specializations

   T                                value of std::numeric_limits<T>::has_infinity
   /* non-specialized */            false
   bool                             false
   char                             false
   signed char                      false
   unsigned char                    false
   wchar_t                          false
   char8_t \fI(since C++20)\fP            false
   char16_t \fI(since C++11)\fP           false
   char32_t \fI(since C++11)\fP           false
   short                            false
   unsigned short                   false
   int                              false
   unsigned int                     false
   long                             false
   unsigned long                    false
   long long \fI(since C++11)\fP          false
   unsigned long long \fI(since C++11)\fP false
   float                            usually true
   double                           usually true
   long double                      usually true

.SH Example

   
// Run this code

 #include <iostream>
 #include <limits>
  
 int main()
 {
     std::cout << std::boolalpha
               << std::numeric_limits<int>::has_infinity << '\\n'
               << std::numeric_limits<long>::has_infinity << '\\n'
               << std::numeric_limits<float>::has_infinity << '\\n'
               << std::numeric_limits<double>::has_infinity << '\\n';
 }

.SH Possible output:

 false
 false
 true
 true

.SH See also

   infinity          returns the positive infinity value of the given floating-point
   \fB[static]\fP          type
                     \fI(public static member function)\fP 
   has_quiet_NaN     identifies floating-point types that can represent the special
   \fB[static]\fP          value "quiet not-a-number" (NaN)
                     \fI(public static member constant)\fP 
   has_signaling_NaN identifies floating-point types that can represent the special
   \fB[static]\fP          value "signaling not-a-number" (NaN)
                     \fI(public static member constant)\fP 
