.TH std::sorted_unique_t,std::sorted_unique 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::sorted_unique_t,std::sorted_unique \- std::sorted_unique_t,std::sorted_unique

.SH Synopsis
   Defined in header <flat_map>
   Defined in header <flat_set>
   struct sorted_unique_t { explicit sorted_unique_t() = default; }; \fB(1)\fP (since C++23)
   inline constexpr sorted_unique_t sorted_unique{};                 \fB(2)\fP (since C++23)

   1) The type std::sorted_unique_t can be used in the function's (including
   constructor's) parameter list to match the intended tag.
   2) The corresponding std::sorted_unique instance of \fB(1)\fP is a disambiguation tag that
   can be passed to the functions of std::flat_map and std::flat_set to indicate that
   the input range or container is sorted (with respect to the comparator used in flat
   container adaptor) and all elements of such container or range are unique.

.SH Standard library

   The following standard library container adaptors use (1,2) as disambiguation tags:

   flat_map adapts two containers to provide a collection of key-value pairs, sorted by
   (C++23)  unique keys
            \fI(class template)\fP 
   flat_set adapts a container to provide a collection of unique keys, sorted by keys
   (C++23)  \fI(class template)\fP 

.SH See also

   sorted_equivalent   indicates that elements of a range are sorted (uniqueness is not
   sorted_equivalent_t required)
   (C++23)             (tag)
   from_range_t        from-range construction tag
   from_range          (tag)
   (C++23)
   in_place
   in_place_type
   in_place_index      in-place construction tag
   in_place_t          (tag)
   in_place_type_t
   in_place_index_t
   \fI(C++17)\fP
