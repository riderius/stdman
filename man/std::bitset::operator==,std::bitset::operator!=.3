.TH std::bitset::operator==,std::bitset::operator!= 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::bitset::operator==,std::bitset::operator!= \- std::bitset::operator==,std::bitset::operator!=

.SH Synopsis
   bool operator==( const bitset& rhs ) const; \fB(1)\fP (noexcept since C++11)
                                                   (constexpr since C++23)
   bool operator!=( const bitset& rhs ) const; \fB(2)\fP (noexcept since C++11)
                                                   \fI(until C++20)\fP

   1) Returns true if all of the bits in *this and rhs are equal.
   2) Returns true if any of the bits in *this and rhs are not equal.

   The != operator is synthesized from operator==. \fI(since C++20)\fP

.SH Parameters

   rhs - bitset to compare

.SH Return value

   1) true if the value of each bit in *this equals the value of the corresponding bit
   in rhs, otherwise false.
   2) true if !(*this == rhs), otherwise false.

.SH Example

   Compare given bitsets to determine if they are identical:

   
// Run this code

 #include <bitset>
 #include <iostream>
  
 int main()
 {
     std::bitset<4> b1(0b0011);
     std::bitset<4> b2(b1);
     std::bitset<4> b3(0b0100);
  
     std::cout << std::boolalpha;
     std::cout << "b1 == b2: " << (b1 == b2) << '\\n';
     std::cout << "b1 == b3: " << (b1 == b3) << '\\n';
     std::cout << "b1 != b3: " << (b1 != b3) << '\\n';
  
 //  b1 == std::bitset<3>{}; // compile-time error: incompatible types
 }

.SH Output:

 b1 == b2: true
 b1 == b3: false
 b1 != b3: true
