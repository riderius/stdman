.TH std::span::back 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::span::back \- std::span::back

.SH Synopsis
   constexpr reference back() const;  \fI(since C++20)\fP

   Returns a reference to the last element in the span.

   Calling back on an empty span results in undefined behavior.

.SH Parameters

   \fI(none)\fP

.SH Return value

   A reference to the back element.

.SH Complexity

   Constant.

.SH Notes

   For a span c, the expression c.back() is equivalent to *(c.end() - 1).

.SH Example

   
// Run this code

 #include <iostream>
 #include <span>
  
 void print_forward(std::span<const int> const span)
 {
     for (auto n{span.size()}; n != 0; --n)
         std::cout << span.last(n).front() << ' ';
     std::cout << '\\n';
 }
  
 void print_backward(std::span<const int> const span)
 {
     for (auto n{span.size()}; n != 0; --n)
         std::cout << span.first(n).back() << ' ';
     std::cout << '\\n';
 }
  
 int main()
 {
     constexpr int numbers[]{0, 1, 2, 3, 4};
     print_forward(numbers);
     print_backward(numbers);
 }

.SH Output:

 0 1 2 3 4
 4 3 2 1 0

.SH See also

   front access the first element
         \fI(public member function)\fP 
