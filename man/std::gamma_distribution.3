.TH std::gamma_distribution 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::gamma_distribution \- std::gamma_distribution

.SH Synopsis
   Defined in header <random>
   template< class RealType = double >  \fI(since C++11)\fP
   class gamma_distribution;

   Produces random positive floating-point values x, distributed according to
   probability density function:

   \\(\\mathsf{p}(x\\mid\\alpha,\\beta) = \\frac{e^{-x/\\beta}
   }{\\beta^\\alpha\\cdot\\Gamma(\\alpha)}\\cdot x^{\\alpha-1} \\)P(x|α,β) =

   e-x/β
   βα
   · Γ(α)

   · xα-1

   where α is known as the shape parameter and β is known as the scale parameter. The
   shape parameter is sometimes denoted by the letter k and the scale parameter is
   sometimes denoted by the letter θ.

   For floating-point α, the value obtained is the sum of α independent exponentially
   distributed random variables, each of which has a mean of β.

   std::gamma_distribution satisfies RandomNumberDistribution.

.SH Template parameters

   RealType - The result type generated by the generator. The effect is undefined if
              this is not one of float, double, or long double.

.SH Member types

   Member type         Definition
   result_type \fI(C++11)\fP RealType
   param_type \fI(C++11)\fP  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
   reset         resets the internal state of the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Characteristics
   alpha         returns the distribution parameters
   beta          \fI(public member function)\fP 
   \fI(C++11)\fP
   param         gets or sets the distribution parameter object
   \fI(C++11)\fP       \fI(public member function)\fP 
   min           returns the minimum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 
   max           returns the maximum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 

.SH Non-member functions

   operator==
   operator!=                compares two distribution objects
   \fI(C++11)\fP                   \fI(function)\fP 
   \fI(C++11)\fP(removed in C++20)
   operator<<                performs stream input and output on pseudo-random number
   operator>>                distribution
   \fI(C++11)\fP                   \fI(function template)\fP 

.SH Example

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <map>
 #include <random>
 #include <string>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
  
     // A gamma distribution with alpha = 1, and beta = 2
     // approximates an exponential distribution.
     std::gamma_distribution<> d(1, 2);
  
     std::map<int, int> hist;
     for (int n = 0; n != 10000; ++n)
         ++hist[2 * d(gen)];
  
     for (auto const& [x, y] : hist)
         if (y / 100.0 > 0.5)
             std::cout << std::fixed << std::setprecision(1)
                       << x / 2.0 << '-' << (x + 1) / 2.0 << ' '
                       << std::string(y / 100, '*') << '\\n';
 }

.SH Possible output:

 0.0-0.5 **********************
 0.5-1.0 ****************
 1.0-1.5 *************
 1.5-2.0 **********
 2.0-2.5 ********
 2.5-3.0 ******
 3.0-3.5 *****
 3.5-4.0 ****
 4.0-4.5 ***
 4.5-5.0 **
 5.0-5.5 **
 5.5-6.0 *
 6.0-6.5 *
 6.5-7.0
 7.0-7.5
 7.5-8.0

.SH External links

   Weisstein, Eric W. "Gamma Distribution." From MathWorld — A Wolfram Web Resource.
