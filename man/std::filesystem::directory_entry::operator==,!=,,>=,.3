.TH std::filesystem::directory_entry::operator==,!=,,>=, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::directory_entry::operator==,!=,,>=, \- std::filesystem::directory_entry::operator==,!=,,>=,

.SH Synopsis
   bool operator==( const directory_entry& rhs ) const noexcept;      \fB(1)\fP \fI(since C++17)\fP
   bool operator!=( const directory_entry& rhs ) const noexcept;      \fB(2)\fP \fI(since C++17)\fP
                                                                          \fI(until C++20)\fP
   bool operator<( const directory_entry& rhs ) const noexcept;       \fB(3)\fP \fI(since C++17)\fP
                                                                          \fI(until C++20)\fP
   bool operator<=( const directory_entry& rhs ) const noexcept;      \fB(4)\fP \fI(since C++17)\fP
                                                                          \fI(until C++20)\fP
   bool operator>( const directory_entry& rhs ) const noexcept;       \fB(5)\fP \fI(since C++17)\fP
                                                                          \fI(until C++20)\fP
   bool operator>=( const directory_entry& rhs ) const noexcept;      \fB(6)\fP \fI(since C++17)\fP
                                                                          \fI(until C++20)\fP
   std::strong_ordering operator<=>( const directory_entry& rhs )     \fB(7)\fP \fI(since C++20)\fP
   const noexcept;

   Compares the path with the directory entry rhs.

   The <, <=, >, >=, and != operators are synthesized from operator<=>    \fI(since C++20)\fP
   and operator== respectively.

.SH Parameters

   rhs - directory_entry to compare

.SH Return value

   1) true if path() == rhs.path(), false otherwise.
   2) true if path() != rhs.path(), false otherwise.
   3) true if path() < rhs.path(), false otherwise.
   4) true if path() <= rhs.path(), false otherwise.
   5) true if path() > rhs.path(), false otherwise.
   6) true if path() >= rhs.path(), false otherwise.
   7) The result of path() <=> rhs.path().

.SH See also

   path                 returns the path the entry refers to
   operator const path& \fI(public member function)\fP 
