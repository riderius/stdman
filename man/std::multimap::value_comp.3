.TH std::multimap::value_comp 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::multimap::value_comp \- std::multimap::value_comp

.SH Synopsis
   std::multimap::value_compare value_comp() const;

   Returns a function object that compares objects of type std::multimap::value_type
   (key-value pairs) by using key_comp to compare the first components of the pairs.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The value comparison function object.

.SH Complexity

   Constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <map>
 #include <utility>
  
 // Example module 97 key compare function
 struct ModCmp
 {
     bool operator()(int lhs, int rhs) const
     {
         return (lhs % 97) < (rhs % 97);
     }
 };
  
 int main()
 {
     std::multimap<int, char, ModCmp> cont;
     cont = {{1, 'a'}, {2, 'b'}, {3, 'c'}, {4, 'd'}, {5, 'e'}};
  
     auto comp_func = cont.value_comp();
  
     for (const std::pair<int, char> val = {100, 'a'}; auto it : cont)
     {
         const bool before = comp_func(it, val);
         const bool after = comp_func(val, it);
  
         std::cout << '(' << it.first << ',' << it.second << ") ";
         if (!before && !after)
             std::cout << "equivalent to key (" << val.first << ")\\n";
         else if (before)
             std::cout << "goes before key (" << val.first << ")\\n";
         else if (after)
             std::cout << "goes after key (" << val.first << ")\\n";
         else
             std::unreachable();
     }
 }

.SH Output:

 (1,a) goes before key (100)
 (2,b) goes before key (100)
 (3,c) equivalent to key (100)
 (4,d) goes after key (100)
 (5,e) goes after key (100)

.SH See also

   key_comp returns the function that compares keys
            \fI(public member function)\fP 
