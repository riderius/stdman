.TH std::flat_set::emplace 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::flat_set::emplace \- std::flat_set::emplace

.SH Synopsis
   template< class... Args >                             (since C++23)
   std::pair<iterator, bool> emplace( Args&&... args );

   Inserts a new element into the container constructed in-place with the given args,
   if there is no element with the key in the container.

   First, initializes an object t of type value_type with std::forward<Args>(args)...,
   then inserts t as if by

 auto it = ranges::upper_bound(c, t, compare);
 c.insert(it, std::move(t));

   This overload participates in overload resolution only if
   std::is_constructible_v<value_type, Args...> is true.

   Careful use of emplace allows the new element to be constructed while avoiding
   unnecessary copy or move operations.

    Information on iterator invalidation is copied from here

.SH Parameters

   args - arguments to forward to the constructor of the element

.SH Return value

   A pair consisting of an iterator to the inserted element (or to the element that
   prevented the insertion) and a bool value set to true if and only if the insertion
   took place.

.SH Exceptions

   If an exception is thrown for any reason, this function has no effect (strong
   exception safety guarantee).

.SH Complexity

   Logarithmic in the size of the container.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   emplace_hint constructs elements in-place using a hint
                \fI(public member function)\fP 
   insert       inserts elements
                \fI(public member function)\fP 

.SH Category:
     * Todo no example
