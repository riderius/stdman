.TH std::ranges::stride_view::iterator::operator[] 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::stride_view::iterator::operator[] \- std::ranges::stride_view::iterator::operator[]

.SH Synopsis
   constexpr decltype(auto) operator[]( difference_type n ) const  (since C++23)
       requires ranges::random_access_range<Base>

   Returns an element at specified relative location.

   Equivalent to: return *(*this + n);.

.SH Parameters

   n - position relative to current location

.SH Return value

   The element at displacement n relative to the current location.

.SH Example

   
// Run this code

 #include <ranges>
  
 int main()
 {
     constexpr static auto v = {'a', 'b', 'c', 'd', 'e'};
     constexpr auto view{v | std::views::stride(2)};
     constexpr auto iter{view.begin() + 1};
     static_assert(*iter == 'c');
     static_assert(iter[0] == 'c');
     static_assert(iter[1] == 'e');
 }

.SH See also

   operator* accesses an element
   (C++23)   \fI(public member function)\fP
