.TH std::strstreambuf 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::strstreambuf \- std::strstreambuf

.SH Synopsis
   Defined in header <strstream>
   class strstreambuf : public std::basic_streambuf<char>  (deprecated in C++98)
                                                           (removed in C++26)

   std::strstreambuf is a std::basic_streambuf whose associated character sequence is a
   character array, which may be constant (e.g. a string literal), modifiable but not
   dynamic (e.g. a stack-allocated array), or dynamic, in which case the
   std::strstreambuf may be allowed to reallocate the array as necessary to accommodate
   output (e.g. by calling delete[] and new[] or user-provided functions).

   Typical implementation of a std::strstreambuf holds four private data members:

   1) buffer state, a bitmask type which can represent any combination of the four
   values "allocated" (destructor will deallocate), "constant" (output not allowed),
   "dynamic" (output may reallocate), or "frozen" (deallocation and reallocation are
   not allowed)
   2) allocated buffer size (the beginning of the buffer does not need a special data
   member, it may be stored in the inherited pointer eback())
   3) pointer to user-provided allocation function
   4) pointer to user-provided deallocation function.

.SH Notes

   After any call to str() on a stream with a dynamic buffer, a call to freeze(false)
   is required to allow the strstreambuf destructor to deallocate the buffer when
   necessary.

   strstreambuf has been deprecated since C++98 and removed since C++26
   . The recommended replacement is std::spanbuf
   (since C++23).

.SH Member functions

.SH Public member functions
   constructor   constructs a strstreambuf object
                 \fI(public member function)\fP 
   destructor    destructs a strstreambuf object, optionally deallocating the character
   \fB[virtual]\fP     array
                 \fI(virtual public member function)\fP 
   freeze        sets/clears the frozen state of the buffer
                 \fI(public member function)\fP 
                 marks the buffer frozen and returns the beginning pointer of the input
   str           sequence
                 \fI(public member function)\fP 
                 returns the next pointer minus the beginning pointer in the output
   pcount        sequence: the number of characters written
                 \fI(public member function)\fP 
.SH Protected member functions
   underflow     reads a character from the input sequence without advancing the next
   \fB[virtual]\fP     pointer
                 \fI(virtual protected member function)\fP 
   pbackfail     backs out the input sequence to unget a character
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   overflow      appends a character to the output sequence, may reallocate or
   \fB[virtual]\fP     initially allocate the buffer if dynamic and not frozen
                 \fI(virtual protected member function)\fP 
   setbuf        attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP     \fI(virtual protected member function)\fP 
   seekoff       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both, using relative addressing
                 \fI(virtual protected member function)\fP 
   seekpos       repositions the next pointer in the input sequence, output sequence,
   \fB[virtual]\fP     or both using absolute addressing
                 \fI(virtual protected member function)\fP 

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not
               CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor         destructs the basic_streambuf object
   \fB[virtual]\fP          \fI\fI(virtual public member function\fP of\fP
                      std::basic_streambuf<CharT,Traits>) 
.SH Locales
                      invokes imbue()
   pubimbue           \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      obtains a copy of the associated locale
   getloc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Positioning
                      invokes setbuf()
   pubsetbuf          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekoff()
   pubseekoff         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekpos()
   pubseekpos         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes sync()
   pubsync            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Get area
                      obtains the number of characters immediately available in the get
   in_avail           area
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      advances the input sequence, then reads one character without
   snextc             advancing again
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
   sbumpc             reads one character from the input sequence and advances the
   stossc             sequence
   (removed in C++17) \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      reads one character from the input sequence without advancing the
   sgetc              sequence
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsgetn()
   sgetn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Put area
                      writes one character to the put area and advances the next
   sputc              pointer
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsputn()
   sputn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Putback
                      puts one character back in the input sequence
   sputbackc          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      moves the next pointer in the input sequence back by one
   sungetc            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP 
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP 
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP 
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekoff       or both, using relative addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekpos       or both using absolute addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Get area
                 obtains the number of characters available for input in the associated
   showmanyc     input sequence, if known
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 reads characters from the associated input sequence to the get area
   uflow         and advances the next pointer
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   eback         returns a pointer to the beginning, current character and the end of
   gptr          the get area
   egptr         \fI(protected member function)\fP 
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the input
   setg          sequence
                 \fI(protected member function)\fP 
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   pbase         returns a pointer to the beginning, current character and the end of
   pptr          the put area
   epptr         \fI(protected member function)\fP 
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the output
   setp          sequence
                 \fI(protected member function)\fP 
.SH Putback
                 puts a character back into the input sequence, possibly modifying the
   pbackfail     input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
