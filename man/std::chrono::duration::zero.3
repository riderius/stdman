.TH std::chrono::duration::zero 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::duration::zero \- std::chrono::duration::zero

.SH Synopsis
   static constexpr duration zero();           \fI(until C++20)\fP
   static constexpr duration zero() noexcept;  \fI(since C++20)\fP

   Returns a zero-length duration.

   If the representation rep of the duration requires some other implementation to
   return a zero-length duration, std::chrono::duration_values can be specialized to
   return the desired value.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Returns duration(std::chrono::duration_values<rep>::zero()).

.SH Example

   
// Run this code

 #include <chrono>
 #include <ratio>
  
 template<typename X, typename Y>
 using dura = std::chrono::duration<X, Y>;
  
 static_assert
 (
     (std::chrono::hours::zero() == std::chrono::nanoseconds::zero()) &&
     (dura<short, std::nano>::zero() == dura<int, std::deci>::zero()) &&
     (dura<short, std::deca>::zero() == dura<long, std::exa>::zero()) &&
     (dura<long, std::atto>::zero().count() == dura<float, std::exa>::zero().count())
 );
  
 int main() {}

.SH See also

   min      returns the special duration value min
   \fB[static]\fP \fI(public static member function)\fP 
   max      returns the special duration value max
   \fB[static]\fP \fI(public static member function)\fP 
