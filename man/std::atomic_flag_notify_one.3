.TH std::atomic_flag_notify_one 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic_flag_notify_one \- std::atomic_flag_notify_one

.SH Synopsis
   Defined in header <atomic>
   void atomic_flag_notify_one( std::atomic_flag* object ) noexcept;  \fB(1)\fP \fI(since C++20)\fP
   void atomic_flag_notify_one( volatile std::atomic_flag* object )   \fB(2)\fP \fI(since C++20)\fP
   noexcept;

   Performs atomic notifying operations.

   If there is a thread blocked in an atomic waiting operation (i.e.
   std::atomic_flag_wait(), std::atomic_flag_wait_explicit(), or
   std::atomic_flag::wait()) on *object, then unblocks at least one such thread;
   otherwise does nothing.

   Equivalent to object->notify_one().

.SH Parameters

   object - pointer to the atomic_flag object to notify

.SH Return value

   \fI(none)\fP

.SH Notes

   This form of change-detection is often more efficient than simple polling or pure
   spinlocks.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   notify_one             notifies at least one thread waiting on the atomic object
   (C++20)                \fI(public member function of std::atomic_flag)\fP 
   notify_all             notifies all threads blocked waiting on the atomic object
   (C++20)                \fI(public member function of std::atomic_flag)\fP 
   atomic_flag_notify_all notifies all threads blocked in atomic_flag_wait
   (C++20)                \fI(function)\fP 

.SH Category:
     * Todo no example
