.TH std::noop_coroutine_promise 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::noop_coroutine_promise \- std::noop_coroutine_promise

.SH Synopsis
   Defined in header <coroutine>
   struct noop_coroutine_promise {};  \fI(since C++20)\fP

   noop_coroutine_promise is the promise type of no-op coroutines.

   A no-op coroutine behaves as if it

     * does nothing other than the control flow of a coroutine, and
     * is suspended immediately after beginning and resumption, and
     * has a coroutine state such that destroying the state is no-op, and
     * never reaches its final suspended point if there is any std::coroutine_handle
       referring to it.

    This section is incomplete
    Reason: more precise wording

   No-op coroutines can be started by std::noop_coroutine, and controlled by the
   coroutine handle it returns. The returned coroutine handle is of type
   std::noop_coroutine_handle, which is a synonym for
   std::coroutine_handle<std::noop_coroutine_promise>.

   Some operations of a no-op coroutines are determined no-op at compile time through
   the type std::noop_coroutine_handle.

    This section is incomplete
    Reason: usage of no-op coroutines

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   noop_coroutine        creates a coroutine handle that has no observable effects when
   (C++20)               resumed or destroyed
                         \fI(function)\fP 
   noop_coroutine_handle std::coroutine_handle<std::noop_coroutine_promise>, intended
   (C++20)               to refer to a no-op coroutine
                         \fI(typedef)\fP 

.SH Categories:
     * Todo with reason
     * Todo no example
