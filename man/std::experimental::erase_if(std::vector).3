.TH std::experimental::erase_if(std::vector) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::erase_if(std::vector) \- std::experimental::erase_if(std::vector)

.SH Synopsis
   Defined in header <experimental/vector>
   template< class T, class Alloc, class Pred >           (library fundamentals TS v2)
   void erase_if( std::vector<T, Alloc>& c, Pred pred );

   Erases all elements that satisfy the predicate pred from the container. Equivalent
   to c.erase(std::remove_if(c.begin(), c.end(), pred), c.end());.

.SH Parameters

   c    - container from which to erase
   pred - predicate that determines which elements should be erased

.SH Complexity

   Linear.

.SH Example

   
// Run this code

 #include <experimental/vector>
 #include <iostream>
  
 template<typename Os, typename Container>
 inline Os& operator<<(Os& os, Container const& container)
 {
     os << "{ ";
     for (const auto& item : container)
         os << item << ' ';
     return os << '}';
 }
  
 int main()
 {
     std::vector<int> data{3, 3, 4, 5, 5, 6, 6, 7, 2, 1, 0};
     std::cout << "Original:\\n" << data << '\\n';
     auto divisible_by_3 = [](auto const& x) { return (x % 3) == 0; };
     std::experimental::erase_if(data, divisible_by_3);
     std::cout << "Erase all items divisible by 3:\\n" << data << '\\n';
 }

.SH Output:

 Original:
 { 3 3 4 5 5 6 6 7 2 1 0 }
 Erase all items divisible by 3:
 { 4 5 5 7 2 1 }

.SH See also

   remove                      removes elements satisfying specific criteria
   remove_if                   \fI(function template)\fP 
   erase (std::vector)         erases all elements equal to a specific value from a
   (library fundamentals 2 TS) std::vector
                               \fI(function template)\fP 

.SH Category:
     * Noindexed pages
