.TH std::ranges::join_with_view::end 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::join_with_view::end \- std::ranges::join_with_view::end

.SH Synopsis
   constexpr auto end();                                               \fB(1)\fP (since
                                                                           C++23)
   constexpr auto end() const

     requires ranges::input_range<const V> &&                          \fB(2)\fP (since
              ranges::forward_range<const Pattern> &&                      C++23)

              std::is_reference_v<ranges::range_reference_t<const V>>;

   Returns an iterator or a sentinel that compares equal to the end iterator of the
   join_with_view.

   Let base_ denote the underlying view:

   1) Equivalent to:

 if constexpr (ranges::forward_range<V> &&
               std::is_reference_v<ranges::range_reference_t<V>> &&
               ranges::forward_range<ranges::range_reference_t<V>> &&
               ranges::common_range<V> &&
               ranges::common_range<ranges::range_reference_t<V>>)
     return /*iterator*/<__SimpleView<V> && __SimpleView<Pattern>>{*this, ranges::end(base_)};
 else
     return /*sentinel*/<__SimpleView<V> && __SimpleView<Pattern>>{*this};

   2) Equivalent to:

 if constexpr (ranges::forward_range<const V> &&
               ranges::forward_range<ranges::range_reference_t<const V>> &&
               ranges::common_range<const V> &&
               ranges::common_range<ranges::range_reference_t<const V>>)
     return /*iterator*/<true>{*this, ranges::end(base_)};
 else
     return /*sentinel*/<true>{*this};

.SH Parameters

   \fI(none)\fP

.SH Return value

   An iterator or sentinel representing the end of the join_with_view, as described
   above.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   begin       returns an iterator to the beginning
   (C++23)     \fI(public member function)\fP 
   ranges::end returns a sentinel indicating the end of a range
   (C++20)     (customization point object)

.SH Category:
     * Todo no example
