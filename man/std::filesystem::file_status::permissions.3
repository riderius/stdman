.TH std::filesystem::file_status::permissions 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::filesystem::file_status::permissions \- std::filesystem::file_status::permissions

.SH Synopsis
   std::filesystem::perms permissions() const noexcept;      \fB(1)\fP \fI(since C++17)\fP
   void permissions( std::filesystem::perms perm ) noexcept; \fB(2)\fP \fI(since C++17)\fP

   Accesses the file permissions information.

   1) Returns file permissions information.
   2) Sets file permissions to perm.

.SH Parameters

   perm - file permissions to set to

.SH Return value

   1) File permissions information.
   2) \fI(none)\fP

.SH Example

   
// Run this code

 #include <filesystem>
 #include <fstream>
 #include <iostream>
  
 void demo_perms(std::filesystem::perms p)
 {
     using std::filesystem::perms;
     auto show = [=](char op, perms perm)
     {
         std::cout << (perms::none == (perm & p) ? '-' : op);
     };
     show('r', perms::owner_read);
     show('w', perms::owner_write);
     show('x', perms::owner_exec);
     show('r', perms::group_read);
     show('w', perms::group_write);
     show('x', perms::group_exec);
     show('r', perms::others_read);
     show('w', perms::others_write);
     show('x', perms::others_exec);
     std::cout << '\\n';
 }
  
 int main()
 {
     std::ofstream("test.txt"); // create file
  
     std::cout << "Created file with permissions: ";
     demo_perms(std::filesystem::status("test.txt").permissions());
  
     std::filesystem::permissions(
         "test.txt",
         std::filesystem::perms::owner_all | std::filesystem::perms::group_all,
         std::filesystem::perm_options::add
     );
  
     std::cout << "After adding u+rwx and g+rwx:  ";
     demo_perms(std::filesystem::status("test.txt").permissions());
  
     std::filesystem::remove("test.txt");
 }

.SH Possible output:

 Created file with permissions: rw-r--r--
 After adding u+rwx and g+wrx:  rwxrwxr--
