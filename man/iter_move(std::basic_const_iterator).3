.TH iter_move(std::basic_const_iterator) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
iter_move(std::basic_const_iterator) \- iter_move(std::basic_const_iterator)

.SH Synopsis
   friend constexpr /*rvalue-reference*/
       iter_move( const basic_const_iterator& i ) noexcept(/* see below   (since C++23)
   */);

   Casts the result of dereferencing the underlying iterator to its associated const
   rvalue reference type.

   The return type /*rvalue-reference*/ is std::common_reference_t<const
   std::iter_value_t<Iter>&&, std::iter_rvalue_reference_t<Iter>>.

   The function body is equivalent to
   return static_cast</*rvalue-reference*/>(std::ranges::iter_move(i.base()));.

   This function is not visible to ordinary unqualified or qualified lookup, and can
   only be found by argument-dependent lookup when std::basic_const_iterator<Iter> is
   an associated class of the arguments.

.SH Return value

   An rvalue reference to const, or a prvalue.

.SH Exceptions

   noexcept specification:  
   noexcept(noexcept(static_cast</*rvalue-reference*/>(std::ranges::iter_move(i.base()))))

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   iter_move casts the result of dereferencing an object to its associated rvalue
   (C++20)   reference type
             (customization point object)

.SH Categories:
     * conditionally noexcept
     * Todo no example
