.TH std::unordered_set::empty 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unordered_set::empty \- std::unordered_set::empty

.SH Synopsis
   bool empty() const noexcept;                \fI(since C++11)\fP
                                               \fI(until C++20)\fP
   [[nodiscard]] bool empty() const noexcept;  \fI(since C++20)\fP

   Checks if the container has no elements, i.e. whether begin() == end().

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the container is empty, false otherwise.

.SH Complexity

   Constant.

.SH Example

   

   The following code uses empty to check if a std::unordered_set<int> contains any
   elements:

   
// Run this code

 #include <iostream>
 #include <unordered_set>
  
 int main()
 {
     std::unordered_set<int> numbers;
     std::cout << std::boolalpha;
     std::cout << "Initially, numbers.empty(): " << numbers.empty() << '\\n';
  
     numbers.insert(42);
     numbers.insert(19937);
     std::cout << "After adding elements, numbers.empty(): " << numbers.empty() << '\\n';
 }

.SH Output:

 Initially, numbers.empty(): true
 After adding elements, numbers.empty(): false

.SH See also

   size    returns the number of elements
           \fI(public member function)\fP 
   empty   checks whether the container is empty
   \fI(C++17)\fP \fI(function template)\fP 
