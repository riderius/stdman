.TH std::end(std::initializer_list) 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::end(std::initializer_list) \- std::end(std::initializer_list)

.SH Synopsis
   Defined in header <initializer_list>
   template< class E >                                              \fI(since C++11)\fP
   const E* end( std::initializer_list<E> il ) noexcept;            \fI(until C++14)\fP
   template< class E >                                              \fI(since C++14)\fP
   constexpr const E* end( std::initializer_list<E> il ) noexcept;

   The overload of std::end for initializer_list returns a pointer to one past the last
   element of il.

.SH Parameters

   il - an initializer_list

.SH Return value

   il.end()

.SH Example

   
// Run this code

 #include <iostream>
 #include <iterator>
 #include <algorithm>
 #include <initializer_list>
  
 int main()
 {
     std::initializer_list il = {3, 1, 4, 1, 5, 9};
  
     std::reverse_copy(std::begin(il),
                       std::end(il),
                       std::ostream_iterator<int>(std::cout, " "));
 }

.SH Output:

 9 5 1 4 1 3

.SH See also

   end returns a pointer to one past the last element
       \fI(public member function)\fP 
