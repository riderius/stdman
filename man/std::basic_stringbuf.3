.TH std::basic_stringbuf 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::basic_stringbuf \- std::basic_stringbuf

.SH Synopsis
   Defined in header <sstream>
   template<

       class CharT,
       class Traits = std::char_traits<CharT>,
       class Allocator = std::allocator<CharT>
   > class basic_stringbuf

       : public std::basic_streambuf<CharT, Traits>

   std::basic_stringbuf is a std::basic_streambuf whose associated character sequence
   is a memory-resident sequence of arbitrary characters, which can be initialized from
   or made available as an instance of std::basic_string.

   Typical implementations of std::basic_stringbuf hold an object of type
   std::basic_string or equivalent resizable sequence container directly as a data
   member and use it as both the controlled character sequence (the array where the six
   pointers of std::basic_streambuf are pointing to) and as the associated character
   sequence (the source of characters for all input operations and the target for the
   output).

   In addition, a typical implementation holds a data member of type
   std::ios_base::openmode to indicate the I/O mode of the associated stream
   (input-only, output-only, input/output, at-end, etc).

   If over-allocation strategy is used by overflow(), an additional
   high-watermark pointer may be stored to track the last initialized     \fI(since C++11)\fP
   character.

   Several typedefs for common character types are provided:

   Defined in header <sstream>
   Type            Definition
   std::stringbuf  std::basic_stringbuf<char>
   std::wstringbuf std::basic_stringbuf<wchar_t>

.SH Member types

   Member type    Definition
   char_type      CharT
   traits_type    Traits; the program is ill-formed if Traits::char_type is not
                  CharT.
   int_type       Traits::int_type
   pos_type       Traits::pos_type
   off_type       Traits::off_type
   allocator_type Allocator

   Exposition-only members

                 the std::basic_string<CharT, Traits, Allocator> used as the underlying
   buf           buffer
                 (exposition-only member object*)
   mode          the std::ios_base::openmode of the associated stream
                 (exposition-only member object*)
   init_buf_ptrs initializes the input and output sequences
                 (exposition-only member function*)

.SH Public member functions

   constructor                     constructs a basic_stringbuf object
                                   \fI(public member function)\fP 
   operator=                       assigns a basic_stringbuf object
   \fI(C++11)\fP                         \fI(public member function)\fP 
   swap                            swaps two basic_stringbuf objects
   \fI(C++11)\fP                         \fI(public member function)\fP 
   destructor                      destructs a basic_stringbuf object and the string it
   \fB[virtual]\fP (implicitly declared) holds
                                   \fI(virtual public member function)\fP 
                                   replaces or obtains a copy of the associated
   str                             character string
                                   \fI(public member function)\fP 
   get_allocator                   obtains a copy of the allocator associated with the
   (C++20)                         internal sequence container
                                   \fI(public member function)\fP 
   view                            obtains a view over the underlying character
   (C++20)                         sequence
                                   \fI(public member function)\fP 

.SH Protected member functions

   underflow returns the next character available in the input sequence
   \fB[virtual]\fP \fI(virtual protected member function)\fP 
   pbackfail puts a character back into the input sequence
   \fB[virtual]\fP \fI(virtual protected member function)\fP 
   overflow  appends a character to the output sequence
   \fB[virtual]\fP \fI(virtual protected member function)\fP 
   setbuf    attempts to replace the controlled character sequence with an array
   \fB[virtual]\fP \fI(virtual protected member function)\fP 
   seekoff   repositions the next pointer in the input sequence, output sequence, or
   \fB[virtual]\fP both, using relative addressing
             \fI(virtual protected member function)\fP 
   seekpos   repositions the next pointer in the input sequence, output sequence, or
   \fB[virtual]\fP both using absolute addressing
             \fI(virtual protected member function)\fP 

.SH Non-member functions

   std::swap(std::basic_stringbuf) specializes the std::swap algorithm
   \fI(C++11)\fP                         \fI(function template)\fP 

Inherited from std::basic_streambuf

.SH Member types

   Member type Definition
   char_type   CharT
   traits_type Traits; the program is ill-formed if Traits::char_type is not
               CharT.
   int_type    Traits::int_type
   pos_type    Traits::pos_type
   off_type    Traits::off_type

.SH Member functions

   destructor         destructs the basic_streambuf object
   \fB[virtual]\fP          \fI\fI(virtual public member function\fP of\fP
                      std::basic_streambuf<CharT,Traits>) 
.SH Locales
                      invokes imbue()
   pubimbue           \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      obtains a copy of the associated locale
   getloc             \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Positioning
                      invokes setbuf()
   pubsetbuf          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekoff()
   pubseekoff         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes seekpos()
   pubseekpos         \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes sync()
   pubsync            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Get area
                      obtains the number of characters immediately available in the get
   in_avail           area
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      advances the input sequence, then reads one character without
   snextc             advancing again
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
   sbumpc             reads one character from the input sequence and advances the
   stossc             sequence
   (removed in C++17) \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      reads one character from the input sequence without advancing the
   sgetc              sequence
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsgetn()
   sgetn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Put area
                      writes one character to the put area and advances the next
   sputc              pointer
                      \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      invokes xsputn()
   sputn              \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
.SH Putback
                      puts one character back in the input sequence
   sputbackc          \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      
                      moves the next pointer in the input sequence back by one
   sungetc            \fI(public member function of std::basic_streambuf<CharT,Traits>)\fP
                      

.SH Protected member functions

   constructor   constructs a basic_streambuf object
                 \fI(protected member function)\fP 
   operator=     replaces a basic_streambuf object
   \fI(C++11)\fP       \fI(protected member function)\fP 
   swap          swaps two basic_streambuf objects
   \fI(C++11)\fP       \fI(protected member function)\fP 
.SH Locales
   imbue         changes the associated locale
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Positioning
   setbuf        replaces the buffer with user-defined array, if permitted
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekoff       or both, using relative addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 repositions the next pointer in the input sequence, output sequence,
   seekpos       or both using absolute addressing
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   sync          synchronizes the buffers with the associated character sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
.SH Get area
                 obtains the number of characters available for input in the associated
   showmanyc     input sequence, if known
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   underflow     reads characters from the associated input sequence to the get area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
                 reads characters from the associated input sequence to the get area
   uflow         and advances the next pointer
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   xsgetn        reads multiple characters from the input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   eback         returns a pointer to the beginning, current character and the end of
   gptr          the get area
   egptr         \fI(protected member function)\fP 
   gbump         advances the next pointer in the input sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the input
   setg          sequence
                 \fI(protected member function)\fP 
.SH Put area
   xsputn        writes multiple characters to the output sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   overflow      writes characters to the associated output sequence from the put area
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
   pbase         returns a pointer to the beginning, current character and the end of
   pptr          the put area
   epptr         \fI(protected member function)\fP 
   pbump         advances the next pointer of the output sequence
                 \fI(protected member function)\fP 
                 repositions the beginning, next, and end pointers of the output
   setp          sequence
                 \fI(protected member function)\fP 
.SH Putback
                 puts a character back into the input sequence, possibly modifying the
   pbackfail     input sequence
   \fB[virtual]\fP     \fI\fI(virtual protected member function\fP of\fP
                 std::basic_streambuf<CharT,Traits>) 
