.TH std::chrono::month_weekday::month,std::chrono::month_weekday::weekday_indexed 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::month_weekday::month,std::chrono::month_weekday::weekday_indexed \- std::chrono::month_weekday::month,std::chrono::month_weekday::weekday_indexed

.SH Synopsis
   constexpr std::chrono::month month() const noexcept;               \fB(1)\fP \fI(since C++20)\fP
   constexpr std::chrono::weekday_indexed weekday_indexed() const     \fB(2)\fP \fI(since C++20)\fP
   noexcept;

   Retrieves a copy of the month and weekday_indexed objects stored in *this.

.SH Return value

   1) A copy of the std::chrono::month object stored in *this.
   2) A copy of the std::chrono::weekday_indexed object stored in *this.

.SH Example

   
// Run this code

 #include <chrono>
 #include <iostream>
  
 int main()
 {
     std::cout << std::boolalpha;
  
     auto mwdi{std::chrono::March/std::chrono::Friday[1]}; // 1st Friday in a March
     std::cout << (std::chrono::year_month_day{mwdi/2024} ==
                   std::chrono::year_month_day{std::chrono::March/1/2024})
                   << ' ';
     auto index = mwdi.weekday_indexed().index();
     auto weekday = mwdi.weekday_indexed().weekday();
     mwdi = {mwdi.month(), weekday[index + 4]}; // 5th Friday in a March
     std::cout << (std::chrono::year_month_day{mwdi/2024} ==
                   std::chrono::year_month_day{std::chrono::March/29/2024})
                   << '\\n';
 }

.SH Output:

 true true
