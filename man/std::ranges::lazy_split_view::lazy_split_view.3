.TH std::ranges::lazy_split_view::lazy_split_view 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::ranges::lazy_split_view::lazy_split_view \- std::ranges::lazy_split_view::lazy_split_view

.SH Synopsis
   lazy_split_view()

     requires std::default_initializable<V> &&                        \fB(1)\fP \fI(since C++20)\fP

              std::default_initializable<Pattern> = default;
   constexpr explicit lazy_split_view( V base, Pattern pattern );     \fB(2)\fP \fI(since C++20)\fP
   template< ranges::input_range R >

     requires std::constructible_from<V, views::all_t<R>> &&
              std::constructible_from<Pattern, ranges::single_view<
                                                                      \fB(3)\fP \fI(since C++20)\fP
   ranges::range_value_t<R>>>

   constexpr explicit lazy_split_view( R&& r,
   ranges::range_value_t<R> e );

   Constructs a lazy_split_view.

   1) Default constructor. Value-initializes the underlying view and the delimiter.
   2) Initializes the underlying view with std::move(base) and the delimiter with
   std::move(pattern).
   3) Initializes the underlying view with views::all(std::forward<R>(r)) and the
   delimiter with ranges::single_view{std::move(e)}.

.SH Parameters

   base    - the underlying view (to be split)
   pattern - view to be used as the delimiter
   e       - element to be used as the delimiter

.SH Example

    This section is incomplete
    Reason: no example

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR     Applied to             Behavior as published              Correct behavior
   LWG 3714  C++20      the multi-parameter constructor was not        made explicit
   (P2711R1)            explicit

.SH Category:
     * Todo no example
