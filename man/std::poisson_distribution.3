.TH std::poisson_distribution 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::poisson_distribution \- std::poisson_distribution

.SH Synopsis
   Defined in header <random>
   template< class IntType = int >  \fI(since C++11)\fP
   class poisson_distribution;

   Produces random non-negative integer values i, distributed according to discrete
   probability function:

   \\(P(i | \\mu) = \\frac{e^{-\\mu}\\mu^i}{i!}\\)P(i|μ) =

   e-μ
   ·μi
   i!

   The value obtained is the probability of exactly i occurrences of a random event if
   the expected, mean number of its occurrence under the same conditions (on the same
   time/space interval) is μ.

   std::poisson_distribution satisfies RandomNumberDistribution.

.SH Template parameters

             The result type generated by the generator. The effect is undefined if
   IntType - this is not one of short, int, long, long long, unsigned short, unsigned
             int, unsigned long, or unsigned long long.

.SH Member types

   Member type         Definition
   result_type \fI(C++11)\fP IntType
   param_type \fI(C++11)\fP  the type of the parameter set, see RandomNumberDistribution.

.SH Member functions

   constructor   constructs new distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
   reset         resets the internal state of the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Generation
   operator()    generates the next random number in the distribution
   \fI(C++11)\fP       \fI(public member function)\fP 
.SH Characteristics
   mean          returns the mean distribution parameter (mean number of occurrences of
   \fI(C++11)\fP       the event)
                 \fI(public member function)\fP 
   param         gets or sets the distribution parameter object
   \fI(C++11)\fP       \fI(public member function)\fP 
   min           returns the minimum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 
   max           returns the maximum potentially generated value
   \fI(C++11)\fP       \fI(public member function)\fP 

.SH Non-member functions

   operator==
   operator!=                compares two distribution objects
   \fI(C++11)\fP                   \fI(function)\fP 
   \fI(C++11)\fP(removed in C++20)
   operator<<                performs stream input and output on pseudo-random number
   operator>>                distribution
   \fI(C++11)\fP                   \fI(function template)\fP 

.SH Example

   
// Run this code

 #include <iomanip>
 #include <iostream>
 #include <map>
 #include <random>
 #include <string>
  
 int main()
 {
     std::random_device rd;
     std::mt19937 gen(rd());
  
     // If an event occurs 4 times a minute on average, how
     // often is it that it occurs n times in one minute?
     std::poisson_distribution<> d(4);
  
     std::map<int, int> hist;
     for (int n = 0; n != 10000; ++n)
         ++hist[d(gen)];
  
     for (auto [x, y] : hist)
         std::cout << std::hex << x << ' '
                   << std::string(y / 100, '*') << '\\n';
 }

.SH Possible output:

 0 *
 1 *******
 2 **************
 3 *******************
 4 *******************
 5 ***************
 6 **********
 7 *****
 8 **
 9 *
 a
 b
 c
 d

.SH External links

     Weisstein, Eric W. "Poisson Distribution." From MathWorld — A Wolfram Web
     Resource.
