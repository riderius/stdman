.TH std::chrono::year_month_weekday::year,std::chrono::year_month_weekday::month, 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::chrono::year_month_weekday::year,std::chrono::year_month_weekday::month, \- std::chrono::year_month_weekday::year,std::chrono::year_month_weekday::month,

.SH Synopsis
                     std::chrono::year_month_weekday::weekday_indexed

   constexpr std::chrono::year year() const noexcept;                 \fB(1)\fP \fI(since C++20)\fP
   constexpr std::chrono::month month() const noexcept;               \fB(2)\fP \fI(since C++20)\fP
   constexpr std::chrono::weekday weekday() const noexcept;           \fB(3)\fP \fI(since C++20)\fP
   constexpr unsigned index() const noexcept;                         \fB(4)\fP \fI(since C++20)\fP
   constexpr std::chrono::weekday_indexed weekday_indexed() const     \fB(5)\fP \fI(since C++20)\fP
   noexcept;

   Retrieves the field values stored in this year_month_weekday object.

.SH Return value

   1) Returns the stored std::chrono::year value.
   2) Returns the stored std::chrono::month value.
   3) Returns the stored std::chrono::weekday value.
   4) Returns the stored weekday index.
   5) weekday()[index()]

.SH Example

   
// Run this code

 #include <cassert>
 #include <chrono>
  
 int main()
 {
     constexpr auto ym{std::chrono::year(2021)/std::chrono::January};
     constexpr auto wdi{std::chrono::Wednesday[1]};
     auto ymwdi{ym/wdi};
     const auto index{ymwdi.index() + 1};
     auto weekday{ymwdi.weekday() + std::chrono::days(1)};
     ymwdi = {ymwdi.year()/ymwdi.month()/weekday[index]};
     // Second Thursday in January, 2021
     assert(std::chrono::year_month_day{ymwdi} == std::chrono::January/14/2021);
 }
