.TH std::error_code::error_code 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::error_code::error_code \- std::error_code::error_code

.SH Synopsis
   error_code() noexcept;                                     \fB(1)\fP \fI(since C++11)\fP
   error_code( int ec, const error_category& ecat ) noexcept; \fB(2)\fP \fI(since C++11)\fP
   template< class ErrorCodeEnum >                            \fB(3)\fP \fI(since C++11)\fP
   error_code( ErrorCodeEnum e ) noexcept;
   error_code( const error_code& other ) = default;           \fB(4)\fP \fI(since C++11)\fP
                                                                  (implicitly declared)
   error_code( error_code&& other ) = default;                \fB(5)\fP \fI(since C++11)\fP
                                                                  (implicitly declared)

   Constructs new error code.

   1) Constructs error code with default value. Equivalent to error_code(0,
   std::system_category()).
   2) Constructs error code with ec as the platform-dependent error code and ecat as
   the corresponding error category.
   3) Constructs error code from an error code enum e. Equivalent to
   make_error_code(e), where make_error_code is only found by argument-dependent
   lookup. This overload participates in overload resolution only if
   std::is_error_code_enum<ErrorCodeEnum>::value is true.
   4,5) Implicitly defined copy constructor and move constructor. Initializes the error
   code with the contents of the other.

.SH Parameters

   other - another error code to initialize with
   ec    - platform dependent error code to construct with
   ecat  - error category corresponding to ec
   e     - error code enum to construct with

   Defect reports

   The following behavior-changing defect reports were applied retroactively to
   previously published C++ standards.

      DR    Applied to          Behavior as published              Correct behavior
   LWG 3629 C++11      only std::make_error_code overloads were ADL-found overloads are
                       used                                     used

.SH See also

   make_error_code(std::errc)        creates error code value for errc enum e
   \fI(C++11)\fP                           \fI(function)\fP 
   make_error_code(std::io_errc)     constructs an iostream error code
   \fI(C++11)\fP                           \fI(function)\fP 
   make_error_code(std::future_errc) constructs a future error code
   \fI(C++11)\fP                           \fI(function)\fP 
