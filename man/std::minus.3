.TH std::minus 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::minus \- std::minus

.SH Synopsis
   Defined in header <functional>
   template<>                      \fI(since C++14)\fP
   class minus<void>;

   std::minus<void> is a specialization of std::minus with parameter and return type
   deduced.

.SH Member functions

   operator() returns the difference of two arguments
              \fI(public member function)\fP

std::minus<void>::operator()

   template< class T, class U >

   constexpr auto operator()( T&& lhs, U&& rhs ) const

       -> decltype(std::forward<T>(lhs) - std::forward<U>(rhs));

   Returns the difference of lhs and rhs.

.SH Parameters

   lhs, rhs - values to subtract

.SH Return value

   std::forward<T>(lhs) - std::forward<U>(rhs).

.SH Example

   
// Run this code

 #include <complex>
 #include <functional>
 #include <iostream>
  
 int main()
 {
     auto complex_minus = std::minus<void>{}; // “void” can be omitted
     constexpr std::complex<int> z(4, 2);
     std::cout << complex_minus(z, 1) << '\\n';
     std::cout << (z - 1) << '\\n';
 }

.SH Output:

 (3,2)
 (3,2)
