.TH std::coroutine_handle::operator= 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::coroutine_handle::operator= \- std::coroutine_handle::operator=

.SH Synopsis
   coroutine_handle& operator=( std::nullptr_t ) noexcept;            \fB(1)\fP \fI(since C++20)\fP
   coroutine_handle& operator=( const coroutine_handle& other ) =     \fB(2)\fP \fI(since C++20)\fP
   default;
   coroutine_handle& operator=( coroutine_handle&& other ) = default; \fB(3)\fP \fI(since C++20)\fP

   Replaces the underlying address.

   1) Replaces the underlying address with a null pointer value. After assignment,
   *this does not refer to a coroutine. This assignment operator is not declared for
   specialization std::coroutine_handle<std::noop_coroutine_promise>.
   2,3) Replaces the underlying address with the one of other. Copy and move assignment
   operators are equivalent to implicitly declared ones.

.SH Parameters

   other - another coroutine_handle to assign from

.SH Return value

   *this
