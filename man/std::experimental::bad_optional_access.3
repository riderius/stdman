.TH std::experimental::bad_optional_access 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::bad_optional_access \- std::experimental::bad_optional_access

.SH Synopsis
   Defined in header <experimental/optional>
   class bad_optional_access;                 (library fundamentals TS)

   Defines a type of object to be thrown by std::experimental::optional::value when
   accessing an optional object that does not contain a value.

   std-bad optional access-inheritance.svg

                                   Inheritance diagram

.SH Member functions

   constructor   constructs a new bad_optional_access object
                 \fI(public member function)\fP
   operator=     replaces the bad_optional_access object
                 \fI(public member function)\fP
   what          returns the explanatory string
                 \fI(public member function)\fP

std::experimental::bad_optional_access::bad_optional_access

   bad_optional_access() noexcept;                        \fB(1)\fP (library fundamentals TS)
   bad_optional_access( const bad_optional_access& other  \fB(2)\fP (library fundamentals TS)
   ) noexcept;

   Constructs a new bad_optional_access object with an implementation-defined
   null-terminated byte string which is accessible through what().

   1) Default constructor.
   2) Copy constructor. If *this and other both have dynamic type
   std::experimental::bad_optional_access then std::strcmp(what(), other.what()) == 0.

.SH Parameters

   other - another exception object to copy

std::experimental::bad_optional_access::operator=

   bad_optional_access& operator=( const                      (library fundamentals TS)
   bad_optional_access& other ) noexcept;

   Assigns the contents with those of other. If *this and other both have dynamic type
   std::experimental::bad_optional_access then std::strcmp(what(), other.what()) == 0
   after assignment.

.SH Parameters

   other - another exception object to assign with

.SH Return value

   *this

std::experimental::bad_optional_access::what

   virtual const char* what() const noexcept;  (library fundamentals TS)

   Returns the explanatory string.

.SH Parameters

   \fI(none)\fP

.SH Return value

   Pointer to a null-terminated string with explanatory information. The string is
   suitable for conversion and display as a std::wstring. The pointer is guaranteed to
   be valid at least until the exception object from which it is obtained is destroyed,
   or until a non-const member function (e.g. copy assignment operator) on the
   exception object is called.

.SH Notes

   Implementations are allowed but not required to override what().

Inherited from std::logic_error

Inherited from std::exception

.SH Member functions

   destructor   destroys the exception object
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 
   what         returns an explanatory string
   \fB[virtual]\fP    \fI(virtual public member function of std::exception)\fP 

.SH Category:
     * Noindexed pages
