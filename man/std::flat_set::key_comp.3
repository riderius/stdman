.TH std::flat_set::key_comp 3 "2024.06.10" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::flat_set::key_comp \- std::flat_set::key_comp

.SH Synopsis
   key_compare key_comp() const;  (since C++23)

   Returns the function object that compares the keys, which is a copy of this
   container's constructor argument comp. It is the same as value_comp.

.SH Parameters

   \fI(none)\fP

.SH Return value

   The key comparison function object.

.SH Complexity

   Constant.

.SH Example

   
// Run this code

 #include <iostream>
 #include <flat_set>
 #include <utility>
  
 // Example module 97 key compare function
 struct ModCmp
 {
     bool operator()(int lhs, int rhs) const
     {
         return (lhs % 97) < (rhs % 97);
     }
 };
  
 int main()
 {
     std::flat_set<int, ModCmp> cont{1, 2, 3, 4, 5};
  
     auto comp_func = cont.key_comp();
  
     for (const int key : cont)
     {
         const bool before = comp_func(key, 100);
         const bool after = comp_func(100, key);
  
         std::cout << '(' << key << ") ";
         if (!before && !after)
             std::cout << "equivalent to key (100)\\n";
         else if (before)
             std::cout << "goes before key (100)\\n";
         else if (after)
             std::cout << "goes after key (100)\\n";
         else
             std::unreachable();
     }
 }

.SH Output:

 Key \fB(1)\fP goes before key (100)
 Key \fB(2)\fP goes before key (100)
 Key \fB(3)\fP equivalent to key (100)
 Key \fB(4)\fP goes after key (100)
 Key \fB(5)\fP goes after key (100)

.SH See also

   value_comp returns the function that compares keys in objects of type value_type
              \fI(public member function)\fP 
